// Code generated by go-bindata.
// sources:
// _templates/.style.css.swp
// _templates/dirlist.html
// _templates/file.html
// _templates/notebook.css
// _templates/notebook.html
// _templates/page.html
// _templates/style.css
// _templates/table.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _StyleCssSwp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9a\x49\x88\x1c\x55\x18\xc7\x7f\x11\x41\xa9\x55\x5c\x40\xc4\xe5\x99\xc1\x05\xb4\x7a\x7a\x66\x1c\x67\xa6\x1a\xc4\xab\x87\x10\x21\x31\x97\x20\xf2\xba\xea\x75\x77\x91\xea\xaa\xa2\xaa\x3a\xd3\xe3\x90\x44\xe2\xcd\x83\x24\x47\xa3\x37\x63\xc4\x83\xa8\x08\xa2\x82\xde\x44\x50\x03\x4a\xf0\xe2\x45\x72\xf3\xa0\x68\x10\x11\xf1\x22\xd5\x5d\xbd\x4c\x26\x8b\x27\x17\x78\xbf\x3a\x14\xf5\xea\xbd\xef\xfb\x7f\x5b\xc1\x30\xdd\x6e\x1e\x7a\x6a\x9f\x58\x6f\x34\x01\x6e\x81\x3b\x3e\xe7\xf0\x57\x77\x3e\xc4\x85\xe3\x30\x68\x0f\x92\x72\xc0\x75\x69\x0f\x82\x9e\x4c\x64\xd2\x5c\xba\xf6\xbe\xe3\x63\x83\x8b\x45\x1e\x2c\x76\xa3\xb2\x37\x68\x37\x82\xb4\xbf\x58\x1f\x57\x8b\x7d\x39\x08\xd5\xe2\x73\xa5\xea\x67\xb1\x2c\x55\xb1\x58\x94\x5b\xb1\x6a\x04\x45\x71\x7d\x0d\x1a\x8d\xe6\x1a\x0c\xca\x8e\xb7\x6e\xb3\xb2\xbc\x34\x1a\xf5\x85\xbd\xf7\x8b\xdb\x6e\x7d\xe6\xdf\x56\xa5\xd1\x68\x34\x1a\x8d\x46\xa3\xd1\x68\xfe\x41\xca\x6c\x0f\x27\x80\x1b\xea\xe7\xb0\xbe\xef\xb9\xec\xae\xd1\x68\x34\x1a\x8d\x46\xa3\xd1\x68\x34\x1a\x8d\xe6\xff\x8b\x0c\xe1\x9d\x9b\xe1\xb0\x31\xfe\xff\xff\xe4\xef\xff\x3f\x5c\xb8\xe0\xc2\x37\x2e\x7c\xea\xc2\x5b\x2e\xbc\xea\xc2\x2b\x2e\xbc\xec\xc2\xc0\x85\xc2\x05\xe5\xc2\x7e\x17\xf6\xb9\xb0\xe1\xc2\xdd\x2e\xdc\xe5\x82\xe1\xc2\x25\x07\xbe\x77\xe0\xbc\x03\x1f\x3a\xf0\x81\x03\xaf\x3b\x70\xda\x81\xe3\x0e\xc4\x0e\x1c\x72\xe0\xa0\x03\x2d\x07\x1e\x76\xe0\x41\x07\x6e\x77\xe0\x4f\x1b\x7e\xb0\xe1\x5b\x1b\x2e\xd8\xf0\x91\x0d\x6f\xda\xf0\x86\x0d\x67\x6d\x38\x63\xc3\x4b\x36\x14\x36\x1c\xb0\xe1\x49\x1b\x9e\xb0\xa1\x61\xc3\xbd\x36\x18\x36\xfc\x6e\xc1\x6f\x16\x5c\xb4\xe0\x6b\x0b\x3e\xb6\xe0\x9c\x05\x67\x2d\x38\x65\xc1\x49\x0b\x5e\xb0\xe0\x84\x05\x47\x2d\x50\x16\xec\xb7\xc0\xb7\xe0\x11\x0b\xee\xb1\xe0\x46\x0b\x7e\x36\xe1\x27\x13\x7e\x34\xe1\xa2\x09\xe7\x4d\xf8\xd2\x84\x2f\x4c\xf8\xcc\x84\xf7\x4d\x78\xcf\x84\x77\x4d\x38\x67\xc2\x69\x13\x5e\x34\x61\xd3\x04\x65\xc2\x01\x13\x5a\x26\xdc\x67\xc2\x4d\x26\xfc\x6a\xc0\x25\x03\x7e\x31\xe0\x3b\x03\x3e\x31\xe0\x6d\x03\x5e\x33\xe0\x8c\x01\xa7\x0c\x38\x69\x40\x66\xc0\xb3\x46\x5d\x1b\x8d\x46\xa3\xd1\x68\x34\x9a\xff\x3c\xc7\x8e\x21\x44\x26\xc3\x30\x4a\xba\xbe\x58\x6e\x66\x43\xd1\x6c\x21\x44\x5f\xe6\xdd\x28\xf1\x45\x53\xc8\x41\x99\x56\x2b\x9b\x51\x58\xf6\x7c\xb1\xde\x7c\xa0\x45\x23\xe8\xe5\x69\x5f\x8a\x6d\xaa\xe3\xe9\xa0\x8c\xa3\x44\xf9\x22\x49\x13\x55\x6d\x6d\xa7\x79\xa8\xf2\xb9\x67\x19\x1c\xe9\xe6\xe9\x20\x09\xbd\x20\x8d\xd3\xdc\x17\x0b\x6a\xbd\xba\x5a\x34\xc2\x28\x8f\xa3\xa2\x14\x71\x24\xa4\xdf\x49\x83\x41\x21\xb6\x19\x99\x9d\xd3\xd5\x14\xab\xd9\xb0\x35\x5a\xab\x3c\x79\x3d\x15\x75\x7b\xa5\x2f\x96\x1a\xeb\xaa\x3f\x5e\x9f\xf8\x5c\xca\x86\xa2\x48\xe3\x28\x14\x0b\x61\x18\xce\xbf\xf3\x72\x19\x46\x83\xc2\x17\x2b\x13\x5b\x75\x48\xcb\xcd\xe6\x64\x65\x12\xf6\xf2\x74\xa5\x4c\x33\x7f\x9c\x12\x21\xf2\xb1\xd7\xfa\x29\x4b\x8b\xa8\x8c\xd2\xc4\x17\x9d\x68\xa8\xc2\x16\x0b\x85\x92\x79\xd0\x9b\xe8\x9f\x53\xbf\x56\x59\x2b\xc3\x59\x64\x93\x34\xac\xaf\xc9\x76\x10\xb4\xe8\xa4\x69\xa9\x72\x21\x67\x3b\x3a\x69\x52\x7a\x45\xf4\xbc\xf2\xc5\x2c\xc8\xda\xa4\x57\x0b\x59\x99\xaa\xdc\xa9\xac\x9d\x96\x65\xda\xbf\xba\x50\x21\x4a\x35\x2c\x3d\x19\x47\xdd\xc4\x17\x81\x4a\x4a\x95\xb7\x76\xe8\x1a\xa5\xae\x16\x55\x4b\xaa\x93\xb5\xb1\x5a\xd5\x3f\x93\x5d\xe5\x05\x69\x52\xaa\xa4\x14\x51\xbf\x3b\xe9\x84\xa3\x2a\xef\xc4\xe9\xa6\x37\xf4\xa7\x7d\x73\xe5\xe4\x4f\x93\xb3\x34\x8a\x61\xa7\xc1\x2c\x57\xb5\xc1\xb9\x8d\x2b\xbb\x8a\x34\xeb\xcd\xa9\xba\xd5\xc7\x76\xa9\xbb\x86\xa1\x5a\xda\xa8\xc4\x73\x7d\xa3\x94\xda\xe9\x68\xad\x1a\x8b\x5d\xbe\x1e\x1f\x4d\x42\xae\x64\xd8\x57\x57\xa8\xf9\xa8\x63\x1b\xed\xea\x7d\x90\x0f\xfa\xed\x42\x34\x46\x77\xaf\x50\x59\x2d\x2a\x8c\x8a\x2c\x96\x5b\xbe\x88\x92\xaa\xad\x2b\xeb\xf3\x65\xdf\x18\x97\xbd\x1a\x0f\x6f\xf4\x23\x6b\xaf\xdc\xca\xa6\x63\xb6\xc3\x74\x1c\xd5\x26\xe7\xcf\xaf\x56\xe7\xa3\x46\x47\x7a\x6a\x58\xaa\x3c\x91\xb1\x17\x47\xc9\x11\x4f\xc6\x93\xac\xec\x6e\x03\x9f\x59\x13\xb4\xd7\xaa\x6b\xf4\x35\x88\x12\x6f\x3a\x2c\x97\x15\x70\x12\xe9\xdc\x20\x57\x3e\x6b\x0f\xd3\x6d\x6b\xd9\x70\x7a\x76\x1a\x77\x3b\x4e\x83\x23\xad\x39\x97\xcd\xe6\xc6\x46\x18\x4c\x3b\x34\x54\x41\x9a\xcb\x71\xef\xd6\x51\xcf\x7f\x2f\x6a\x1f\x7f\xef\xf3\xe2\xf7\xaa\xee\x9c\x1c\xb9\x42\x53\xce\x9b\x1e\xef\xba\x5a\xe6\x27\x1b\xb7\xe7\x07\x63\xd4\x0e\xb3\x9e\x59\x9d\xf5\xcc\x64\xbf\xb7\x99\xcb\x2c\x9b\x6a\x18\x95\xaa\x23\xfb\x51\xbc\xe5\x8b\xbd\x4f\x1f\x14\x07\x64\x52\xec\x7d\x54\x14\x32\x29\xbc\x42\xe5\x51\xa7\x45\x3b\x0d\xb7\xc4\x36\x7f\x05\x00\x00\xff\xff\x0a\x37\x5c\x5e\x00\x30\x00\x00")

func StyleCssSwpBytes() ([]byte, error) {
	return bindataRead(
		_StyleCssSwp,
		".style.css.swp",
	)
}

func StyleCssSwp() (*asset, error) {
	bytes, err := StyleCssSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".style.css.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1526777644, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dirlistHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x51\x73\xdc\xb6\x11\x7e\x16\x7f\xc5\x9a\xd5\x64\xee\x46\x27\xf0\x6c\xd9\xb2\x62\x91\xd7\x49\x1d\x37\x69\x9d\x2a\x8a\xac\x54\x19\x7b\x3c\x13\x1c\xb9\x24\x21\x81\x00\x05\x80\x77\xba\x5e\xf9\xdf\x3b\x0b\x92\x3a\xe6\xac\xb6\x79\xc9\xbd\x1c\x01\x2c\xbe\xfd\xf6\xdb\x5d\x10\x8c\x9f\x65\x3a\x75\x9b\x1a\xa1\x74\x95\x5c\x04\xf1\xf0\x87\x3c\x5b\x04\x00\xb1\x13\x4e\xe2\x62\xbb\x05\x76\x4d\x4f\xd0\xb6\xf0\x6f\xa8\x78\x93\x61\x1c\x75\x6b\x64\x25\x85\xba\x03\x83\x32\x09\xad\xdb\x48\xb4\x25\xa2\x0b\xa1\x34\x98\x27\x61\xe9\x5c\x6d\xdf\x44\x51\xae\x95\xb3\xac\xd0\xba\x90\xc8\x6b\x61\x59\xaa\xab\x28\xb5\xf6\xcf\x39\xaf\x84\xdc\x24\x97\xd7\x47\x1f\xb8\xb2\x6f\x5e\xce\xe7\xb3\x97\xf3\xb9\x70\x5c\x8a\x74\xf6\x7a\x3e\x0f\x7f\xb7\x8b\xc6\x22\x23\x37\x7c\x8d\x56\x57\xe8\x3d\x18\x94\xc8\x2d\xda\x68\xf5\x8a\xcd\xd9\xf3\x13\x72\x19\x71\x29\x59\x6a\x6d\x08\x42\x39\x2c\x8c\x70\x9b\x24\xb4\x25\x3f\x39\x7b\x79\xfc\xed\xc5\x8f\xdf\x7f\x3c\x3d\xfb\xf9\xac\xfc\x98\xbf\xff\xe5\x47\xe3\x6e\x6f\x56\xb7\x0f\x8d\xfd\x4e\x7f\x7d\xf3\x93\x32\x17\x0f\x2f\xec\xfd\x77\x73\x97\xdb\xa2\xfc\x66\xe5\xfe\x29\xaf\x6e\x4e\xdc\xea\xee\x97\x9b\x8f\xe5\xab\xb3\x8b\xaf\x6f\xeb\x10\x52\xa3\xad\xd5\x46\x14\x42\x25\x21\x57\x5a\x6d\x2a\xdd\xd8\x70\x11\x04\x00\xdb\x2d\x18\xae\x0a\x04\xf6\xc1\x47\x01\x6d\x1b\x00\xfc\x9f\xf0\x48\x7d\x68\x5b\xaf\xc3\x76\x0b\xa8\x32\xda\xf6\x1b\xb4\x1f\x84\x75\x03\xd6\x76\x0b\x22\x07\xbc\x07\x76\x4d\x89\x0d\x73\x2d\x33\x34\xe1\x13\xae\x6a\x83\x39\xba\xb4\x1c\x3b\xfa\xfe\xea\xdd\x5f\xa1\x6d\x23\xef\x6d\xec\x6f\xfc\x1c\x47\x5d\x81\xc4\x4b\x9d\x6d\x7c\x7a\x1a\x09\xa9\xe4\xd6\x26\xe1\xd2\x20\xcf\x52\xd3\x54\x4b\xbb\xc3\xe8\x68\x1e\x0a\x95\xe1\xc3\x0c\x0e\x51\x62\x85\xca\xc1\x9b\x04\xd8\x25\x37\xee\x51\x07\x4f\x6f\xb1\xdd\x8a\xbc\x37\x6e\xdb\xd8\xd6\x5c\x0d\xe0\x1e\xf7\xd8\x62\x1d\x2e\xa2\x38\xa2\x95\xc5\x76\x8b\x2a\x6b\xdb\x2e\xea\x01\x99\x5d\x72\x57\x42\xdb\xc6\x7c\x17\xda\xfe\x5a\xb8\x18\x4f\x5e\xf0\x8a\xaa\x3b\x8e\x38\x4d\xa3\xb4\x34\x7a\xc2\xe0\x51\x84\x38\x92\xe2\x4b\x8d\xe2\xa8\x91\x5e\x10\xa1\xea\xc6\x81\xc8\x92\xd0\x22\x37\xa4\x31\xb5\x59\x12\x3a\x7c\x70\x21\xf8\x24\x27\x61\x26\x6c\x2d\xf9\xe6\x8d\xd2\x0a\x43\x88\x16\x41\x10\x67\x62\x35\x04\x9b\x09\x23\x85\x75\xc7\x6b\xc3\xeb\x1a\x4d\xb8\x27\x74\xbf\x3c\x94\xc5\x13\x95\x40\x5a\x8e\x15\x18\x92\x1b\x2e\x62\x31\xa0\xe4\x1c\x72\x7e\xec\x1b\x9c\xaa\xc5\x2f\x46\xc2\x77\xfc\x48\x92\x21\xd8\x2f\x43\x8d\xa3\x4c\xac\xf6\x88\x53\x05\x54\xe8\xf5\x65\x57\xfe\xd9\xc3\xf4\x86\x36\x35\xa2\x76\x01\x80\x35\xe9\xae\x77\x53\x9d\x21\xbb\xbd\x6f\xd0\x6c\x7c\xdf\x76\x8f\xc7\x27\xec\x84\x3d\x67\x56\x8a\x8a\x55\x42\xb1\x5b\x1b\x06\xb0\xd7\xb5\x2f\x5e\x9d\x1e\x9f\x60\x66\xaa\x4d\xf3\xd3\x7c\x7d\xfa\x2a\x3f\x2b\xf2\xbf\xd8\x7b\xbd\xfe\xd7\xed\xdf\xf1\x85\xf8\xc7\xa9\x9a\xab\xf7\xa9\xb8\xfc\xb9\x3e\xdb\x1c\xbd\x7e\x97\x10\xc2\x7f\xeb\xd1\x38\xea\xd8\xed\x78\x8e\xd2\x16\xdd\xf2\x15\xef\x66\xa9\x9b\x57\xdc\x80\xe2\x15\x5a\x48\xe0\xd3\x67\x3f\x44\xd9\x0f\xfc\x88\xcb\xba\xe4\xe6\x01\x12\x50\xb8\x86\x2b\x2c\xde\x3d\xd4\x93\xe8\xd3\x37\xc7\x1f\x3f\x47\x53\x6f\xd1\x95\x06\x24\x10\x86\x41\x70\x38\x09\x59\x9f\x53\x90\x02\x78\x38\x65\xc8\xd3\x72\x92\x37\x2a\x75\x42\xab\x89\x98\x01\xca\x29\x6c\x03\x00\xda\x4c\x94\x20\x81\xc3\x09\xca\x29\xa3\xc1\x64\xca\x9c\xfe\x41\xaf\xd1\xbc\xe5\x16\x27\xd3\x00\x3a\x7e\xac\x6e\x6c\x39\x21\x0b\x9a\x42\xd9\x4f\xa0\x9c\x06\xed\xd4\xfb\xa5\x36\x0e\xa7\xec\x0e\x37\xb5\x41\x6b\x77\x2e\x71\x45\xfe\x48\x30\xad\xac\x96\xc8\xa4\x2e\x26\xb8\x62\xeb\x52\xa4\xe5\x94\x16\x44\x0e\x34\x51\xa1\xe3\xef\x71\xd3\xb1\x03\x30\xe8\x1a\xa3\x02\x00\x7f\x4e\x11\xdb\x14\x12\xf8\xe0\x8c\x50\x05\xcb\x8d\xae\xde\x96\xdc\xbc\xd5\x19\x8e\xc0\x3a\xac\x5e\x34\xe6\xd0\xba\x49\x3a\x1d\x00\x69\x7b\xfa\x45\x78\x1e\xbd\x17\xf1\x28\x81\x34\x00\xc8\x74\x37\x9e\x74\x7f\x63\x8e\xde\x0f\x24\x09\x3c\x3f\x19\x60\xf7\xac\x67\xe0\x4c\x83\xd3\x27\x42\x88\x22\x08\xa3\x10\xee\x70\x03\xb9\x1e\x12\xf7\x04\xf4\xcb\xd7\x03\x34\xae\x58\x6d\x70\x85\xca\x7d\x8b\x39\x6f\xa4\x9b\x74\xb8\x87\x93\xf0\x4f\xfd\x91\x30\x65\xb9\x4e\x1b\xdb\x87\x42\xb9\x08\x06\xe5\x77\xcc\xee\x67\x50\xe8\x0e\x74\x9c\x84\x7b\xda\x44\x54\x26\xa4\xae\x80\x04\xe6\xe7\x20\x20\xee\x53\x2e\x51\x15\xae\x3c\x07\x71\x74\x34\x10\x1a\xea\x95\xea\x91\x6c\x3e\x89\xcf\x8f\xf3\x28\x21\xa1\xca\x18\xe6\x28\x2c\x32\x62\xd6\xd1\xf1\x7c\x23\x5c\x39\xb9\x7f\x4c\x46\xb7\x3e\xb0\xea\x7e\x5d\x19\xa6\x52\xa4\x77\x7d\xa0\xbf\x11\x91\x7e\xc3\x11\xdf\x99\xee\x42\xdf\x33\x6c\x07\xcd\x9d\xd9\x8c\xa8\xef\x37\xd2\x90\x5f\x80\x16\x52\xee\xd2\xf2\xc9\xd2\xfb\x43\x15\x1a\xca\x94\x8c\x47\xe2\xfc\xae\xf8\xda\x27\x1b\x2f\xc3\xa5\x6e\x54\x8a\xfb\x1d\xd8\x71\xb8\x87\x64\x57\x79\xe3\xb3\xa3\x9d\xc1\xe9\x7c\x3e\x9d\x06\x41\x14\xc1\x95\x77\x65\x81\xc3\x00\x32\x03\x57\x72\x37\x03\x6e\x41\x6a\x55\xd0\xbf\x70\x54\x4d\x4e\xa8\x06\x2d\x38\x0d\x4b\x04\xa1\x56\xfa\x0e\xb3\x19\xac\x85\x94\xa0\xb4\x23\xb0\x25\x82\x33\xa2\x28\xd0\x60\xc6\xe0\xba\xc4\x47\xd0\xce\x6c\x89\x90\x72\x29\x31\x03\x9e\x3b\x34\x84\x6b\x9d\xae\x2d\x2c\x51\xa8\x62\x58\xcb\xb5\x21\xb0\x0b\xa8\x84\x94\xc2\x62\xaa\x55\x66\x19\xfc\x2d\x87\x5f\x45\x55\x61\x26\xb8\xc3\x5f\x41\x58\xa8\xb9\xb5\x44\xa1\xf7\x09\x6e\xec\x50\x2b\x1a\x13\x90\x44\x9e\x11\x3c\x66\x05\xce\x40\x28\xeb\x90\x67\xa0\x73\x6f\xef\x0c\x17\x92\xce\x99\x51\x33\x8d\x65\x9d\xc1\x9a\x0b\x37\x83\x47\xcf\x24\xf0\x81\x3f\x51\x45\x85\xba\x71\xe7\xc1\x41\x97\xae\x47\xd7\x13\x6f\xe2\x6d\x48\xb5\xee\xe0\x75\xa5\xb0\x33\xe0\xa6\xa0\x33\x9f\x9b\xa2\xa1\x6b\x82\x3d\xef\xed\x24\x27\x39\x92\x7d\x88\x83\xde\x07\x95\x58\x23\x25\x59\x1f\x50\x29\x3d\x1b\xb1\xa1\x2d\x8c\xd7\xb5\xdc\x4c\x7a\x6f\x9d\x9b\x29\x59\xb7\x83\x03\x92\xf6\x42\xaf\x21\xd9\x05\x02\x5f\x7d\x05\xcf\x76\x41\x1c\xa4\x12\xb9\xb9\xee\xc6\x93\x7e\xde\x83\xec\x48\x58\x74\x83\x81\x67\xdc\x89\xe3\x8d\x88\x56\xef\xe4\x7f\x73\x6a\xcf\x83\xf6\x3c\x18\xbf\x3a\x73\xad\x1d\x1a\x7f\x5f\xa9\x17\x97\x74\x64\x63\x06\xcb\x0d\x3c\x5e\x46\x86\xb7\x7e\x21\x5c\xd9\x2c\xfd\x0b\x7f\xd9\xa4\x25\x57\x1c\x23\xff\x75\x11\x2e\xfa\x8f\x0c\xba\x7b\xd4\x74\xcd\x18\x30\x83\x38\xea\x6e\x9d\x71\xd4\x7d\xac\xfc\x27\x00\x00\xff\xff\xbf\xc4\xa1\x8c\xc4\x0c\x00\x00")

func dirlistHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dirlistHtml,
		"dirlist.html",
	)
}

func dirlistHtml() (*asset, error) {
	bytes, err := dirlistHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dirlist.html", size: 3268, mode: os.FileMode(436), modTime: time.Unix(1526777482, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _fileHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x51\x6f\xd3\x30\x14\x85\xdf\xf3\x2b\x2e\x7e\x65\x38\x86\x76\xd0\x4d\x49\x10\x02\x69\x48\x48\x1d\xb0\x41\xa7\xbe\x19\xe7\x26\x76\xe7\xd8\xc5\xf7\xb6\x2c\x0a\xf9\xef\xc8\xad\x78\x86\x27\x5b\xba\xe7\xe8\xd3\x39\xa7\x7a\xd6\x46\xc3\xe3\x1e\xc1\xf2\xe0\x9b\xa2\xfa\xfb\xa0\x6e\x9b\x02\xa0\x62\xc7\x1e\x9b\x69\x02\x79\x9f\x7f\x30\xcf\xf0\x1b\x06\x7d\x68\xb1\x2a\xcf\xb7\xac\xf2\x2e\x3c\x42\x42\x5f\x0b\xe2\xd1\x23\x59\x44\x16\x60\x13\x76\xb5\xb0\xcc\x7b\xba\x2e\xcb\x2e\x06\x26\xd9\xc7\xd8\x7b\xd4\x7b\x47\xd2\xc4\xa1\x34\x44\x6f\x3b\x3d\x38\x3f\xd6\x9f\xef\x9f\xdf\xe9\x40\xd7\x4b\xa5\x2e\x96\x4a\x39\xd6\xde\x99\x8b\x37\x4a\x89\xff\x46\x1c\x08\x65\xc6\xe8\x5f\x48\x71\xc0\x13\x21\xa1\x47\x4d\x48\xe5\xf1\x52\x2a\xf9\x72\x91\x91\xa5\xf6\x5e\x1a\x22\x01\x2e\x30\xf6\xc9\xf1\x58\x0b\xb2\x7a\xb1\x5a\xbe\xf8\xb0\xbe\xfd\xb8\x7d\xbd\xfa\xb6\xb2\xdb\xee\xd3\xc3\x6d\xe2\xdd\xe6\xb8\x7b\x3a\xd0\x4d\xbc\xda\x7c\x09\x69\xfd\xf4\x8a\x7e\xde\x28\xee\xa8\xb7\xef\x8e\xfc\xdd\x7f\xdd\x2c\xf8\xf8\xf8\xb0\xd9\xda\xcb\xd5\xfa\x6a\xb7\x17\x60\x52\x24\x8a\xc9\xf5\x2e\xd4\x42\x87\x18\xc6\x21\x1e\x48\x34\x45\x01\x30\x4d\x90\x74\xe8\x11\xe4\xdd\x29\x05\xcc\x73\x01\xf0\x8f\x78\xb9\x7d\x98\xe7\x53\x0f\xd3\x04\x18\xda\x6c\xab\xca\xf3\x48\xd5\x8f\xd8\x8e\x60\xbc\x26\xaa\x85\xb1\x29\x0e\x5a\x34\x45\xf6\xbc\x8f\x81\x31\xf0\x59\x9c\x55\x4d\x36\x9d\x06\xfe\x13\x00\x00\xff\xff\xb9\xbb\xb7\x80\xf8\x01\x00\x00")

func fileHtmlBytes() ([]byte, error) {
	return bindataRead(
		_fileHtml,
		"file.html",
	)
}

func fileHtml() (*asset, error) {
	bytes, err := fileHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "file.html", size: 504, mode: os.FileMode(436), modTime: time.Unix(1526777585, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _notebookCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xdd\x6a\x84\x30\x10\x85\xef\xf3\x14\x03\x4b\x2f\xb3\xb8\x5b\x96\x42\x7c\x9a\x31\x99\x6a\x68\xd6\x09\x93\xa4\x5a\x8a\xef\x5e\xa2\xb5\x3f\xe0\x32\x37\x62\xf2\x9d\x39\xe7\xa4\x63\xf7\x01\x9f\x0a\xa0\x43\xfb\xd6\x0b\x97\xd1\x69\xcb\x81\xc5\xc0\xe9\xd2\xd5\x69\xd5\xa2\xce\xc2\x9c\xb5\xe5\x31\xd3\x98\xd7\xeb\x93\x77\x79\x30\xf0\x72\x7b\x6a\x15\xc0\x1d\xa5\xf7\xa3\x81\x06\xb0\x64\x5e\x09\x4b\x21\xe8\xc4\x45\x2c\xc1\xd9\x0e\xc2\x77\x5c\xc1\x88\xce\xf9\xb1\x37\x70\x6d\xe2\x0c\x97\x26\xce\x55\xa0\x63\x71\x24\x5a\xd0\xf9\x92\x0c\x3c\xd7\xbf\xbb\x08\x97\x1c\xcb\xb6\x75\xdf\x73\x8b\x33\x34\x95\x9b\x06\x9f\x49\xa7\x88\x96\x0c\x44\x21\x3d\x09\xc6\x7a\xc0\xef\x24\xaf\x81\x27\x3d\x1b\x48\x56\x38\x84\xf6\x38\x24\x11\x3d\x32\xf0\xc7\xec\xe6\x73\x51\x19\xbb\x40\x5b\x5f\x1b\x60\x39\x04\x8c\x89\x0c\xec\x5f\xbf\x6a\x06\x2e\x71\x86\xc4\xc1\x3b\x38\xe1\xb5\xce\xb1\x89\x35\x45\xab\xaa\xbe\xfb\x5f\xd2\xed\xa7\xa3\x45\xe5\xe1\xd1\x43\x7d\x67\x38\xa4\xd4\x57\x00\x00\x00\xff\xff\x0d\xb9\x2a\xe1\xe2\x01\x00\x00")

func notebookCssBytes() ([]byte, error) {
	return bindataRead(
		_notebookCss,
		"notebook.css",
	)
}

func notebookCss() (*asset, error) {
	bytes, err := notebookCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "notebook.css", size: 482, mode: os.FileMode(436), modTime: time.Unix(1526776861, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _notebookHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcf\x6a\xf5\x20\x10\xc5\xf7\x79\x8a\xc1\x7d\x14\xbe\x8f\x6e\x8a\xc9\xa2\x85\xd2\x55\xbb\x68\x5f\xc0\xab\x73\x6f\x4c\xbd\x9a\x3a\x93\x4b\x43\xc8\xbb\x17\x0d\xf4\xff\x4a\x38\x33\xbf\x73\xce\xa8\x07\x34\xae\x6f\x00\x74\xf0\xf1\x05\x32\x86\x4e\x10\x2f\x01\x69\x40\x64\x01\x43\xc6\x63\x27\xd6\x15\xe4\x53\x55\x61\xdb\x44\xdf\x94\x7d\xb2\xd9\x4f\x0c\x94\x6d\x27\x06\xe6\x89\xae\x95\xb2\x2e\x8e\x24\x6d\x48\xb3\x3b\x06\x93\x51\xda\x74\x56\x66\x34\x6f\x2a\xf8\x03\xa9\x8c\xaf\xb3\xcf\x28\x47\x52\xff\xe4\x7f\x79\xf5\x21\x9c\x7d\x94\x23\x89\x5e\xab\xdd\xb5\x6f\xb4\xda\x8b\x35\xfa\x90\xdc\x52\x5e\xe7\x2f\x60\x83\x21\xea\x44\x4e\x89\x5b\x9b\x22\x63\x64\xd1\x37\xeb\x0a\xd9\xc4\x13\x82\x7c\xb8\x91\xb7\x18\x42\x69\xf9\x0d\xb0\x18\x02\x94\x23\xca\xf4\x79\x99\x10\xb6\xad\x2d\xa2\xa8\xa7\xff\xd8\x6c\x29\xcd\xd9\xa2\xe8\x0b\x71\xef\x4f\x43\xf0\xa7\x81\xd1\xc1\xb6\x69\xe5\xfc\xa5\x30\x9f\x99\x8f\x33\x4f\x33\xd7\xc8\x3f\xac\x52\x9d\xd6\x98\x02\xb5\x20\xef\x52\x3e\x1b\x2e\x76\xed\x8e\x7c\xb1\xc4\xe8\x6a\xf5\x5d\xfa\x25\x34\x5a\xed\xbf\xf1\x1e\x00\x00\xff\xff\x94\xc7\xc8\xcd\xb6\x01\x00\x00")

func notebookHtmlBytes() ([]byte, error) {
	return bindataRead(
		_notebookHtml,
		"notebook.html",
	)
}

func notebookHtml() (*asset, error) {
	bytes, err := notebookHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "notebook.html", size: 438, mode: os.FileMode(436), modTime: time.Unix(1526236113, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pageHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x6f\xd4\x30\x10\xbd\xe7\x57\x0c\x56\x6f\xb4\x71\xa0\x2d\x6c\x2b\xc7\x08\x81\x54\x24\xa4\xed\x42\x0b\x5b\xf5\xe6\x4d\x26\x89\x5b\xc7\x0e\x1e\x67\xdb\x28\xe4\xbf\xa3\x78\xbb\xa5\x37\x38\xe5\x63\x66\xde\x7b\xf3\xfc\x2c\x5e\x95\xae\x08\x43\x87\xd0\x84\xd6\xc8\x44\xec\x1f\xa8\x4a\x99\x00\x88\xa0\x83\x41\x39\x8e\x90\x5e\xcf\x6f\x30\x4d\xf0\x1b\x5a\xd5\x97\x28\xf8\xae\x36\x77\x19\x6d\xef\xc1\xa3\xc9\x19\x85\xc1\x20\x35\x88\x81\x41\xe3\xb1\xca\x59\x13\x42\x47\xe7\x9c\x57\xce\x06\x4a\x6b\xe7\x6a\x83\xaa\xd3\x94\x16\xae\xe5\x05\xd1\x87\x4a\xb5\xda\x0c\xf9\xea\xfa\xf5\x95\xb2\x74\x7e\x92\x65\x87\x27\x59\xa6\x83\x32\xba\x38\x7c\x9f\x65\xec\xbf\x29\x7a\xc2\x74\xa6\x51\x0f\x48\xae\xc5\xc8\xe0\xd1\xa0\x22\x24\xbe\x3d\x4d\xb3\xf4\xcd\xf1\x4c\xc9\x95\x31\x69\x41\xc4\x40\xdb\x80\xb5\xd7\x61\xc8\x19\x35\xea\x78\x71\x72\xf4\x79\x79\xf9\xe5\xf6\xdd\xe2\xc7\xa2\xb9\xad\xbe\xde\x5c\xfa\x70\xb7\xde\xde\x3d\xf6\x74\xe1\xce\xd6\xdf\xac\x5f\x3e\xbe\xa5\x5f\x17\x59\xa8\xa8\x6e\x3e\x6e\xc3\x4f\xf3\x7d\x7d\x1c\xb6\xf7\x37\xeb\xdb\xe6\x74\xb1\x3c\xbb\xeb\x18\x14\xde\x11\x39\xaf\x6b\x6d\x73\xa6\xac\xb3\x43\xeb\x7a\x62\x32\x49\x00\xc6\x11\xbc\xb2\x35\x42\x7a\x15\xb7\x80\x69\x4a\x00\xfe\xb1\xde\xec\x3e\x4c\x53\xf4\x61\x1c\x01\x6d\x39\x8f\x09\xbe\x3b\x24\xb1\x71\xe5\x10\x2d\xea\x0d\x14\x46\x11\xe5\x6c\xe3\x51\x95\x85\xef\xdb\x0d\xc5\xa9\x17\xc4\x07\xda\x96\xf8\x78\x08\x07\x68\xb0\x45\x1b\xe0\x3c\x87\x74\xa5\x7c\x78\xd6\x12\xd5\xc8\x71\xd4\xd5\x53\xf3\x34\x09\xea\x94\xdd\x83\x47\xdc\x23\xc2\x8e\x49\x2e\xf8\x5c\x91\xe3\x88\xb6\x9c\x26\xa1\xfe\x2a\xde\xe3\xa7\x2b\x15\x9a\xa8\xfe\xe5\xcf\xa5\x6a\xe7\x2c\x09\xae\xa4\xe0\x46\x3f\x6b\x7c\xda\x0d\x40\xf0\xde\xc8\x24\x11\xa5\xde\xee\x79\x3b\x55\xe3\x51\xe1\x6c\x40\x1b\x22\x5a\xfa\x69\xf7\x11\x81\x4a\xbd\x9d\xfb\x2b\xe7\x02\xfa\x68\x47\x27\x57\xee\x01\x3d\x96\xb0\x19\xe0\x59\xda\x3e\x2b\xb5\x0e\x4d\xbf\x89\x11\xd9\xf4\x45\xa3\xac\x42\x1e\x73\xcd\xe4\x53\xbc\x67\x69\x9d\x4c\x04\xdf\x63\x26\x82\xef\xbc\x16\x7c\x77\x4d\xfe\x04\x00\x00\xff\xff\xbb\x37\x19\xb9\x3e\x03\x00\x00")

func pageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_pageHtml,
		"page.html",
	)
}

func pageHtml() (*asset, error) {
	bytes, err := pageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "page.html", size: 830, mode: os.FileMode(436), modTime: time.Unix(1526777126, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _styleCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x51\x8e\xdb\x20\x10\xfd\xf7\x29\x46\xbb\xea\x5f\x89\xbc\xbb\x4d\x93\xb0\x97\xa8\xd4\x5e\x00\xc3\xd8\x46\xc1\x80\x00\x37\x4e\xab\xdc\xbd\x02\x63\xc7\xf6\xa6\x5a\xe5\x23\x62\x3c\x33\xef\xcd\xbc\x07\x95\x11\x57\xf8\x5b\x00\xd4\x46\x07\x52\xb3\x4e\xaa\x2b\x85\xa7\x1f\xbf\xe0\x27\xd3\xfe\xe9\x2b\x78\xa6\x3d\xf1\xe8\x64\xfd\x5e\xdc\x8a\x9d\x90\x4e\x49\x1f\xc8\xc5\x31\x6b\xd1\xa5\xd2\x8e\xb9\x46\x6a\x0a\xfb\xd2\x0e\xc0\xfa\x60\xde\x0b\x80\x8b\x14\xa1\xa5\xf0\xbd\xfc\xb2\xac\x4b\xf9\xa9\x81\x0f\x57\x85\x24\x5c\x2d\x52\xd0\x46\xe3\x2a\x4b\xc9\x94\x58\x19\x27\xd0\x11\xc7\x84\xec\x3d\x85\x37\x3b\x6c\xb2\x68\x6b\x7e\x67\x12\x15\xe3\xe7\xc6\x99\x5e\x0b\xc2\x8d\x32\x8e\xc2\x33\x1e\xe3\x6f\xdb\x98\xa5\xf4\x80\x43\x20\x02\xb9\x71\x2c\x48\xa3\x27\x0e\x00\x53\x71\x59\x9e\x4e\x82\xc7\x88\x90\xde\x2a\x76\xa5\x50\x29\xc3\xcf\x31\x62\x99\x10\x52\x37\x14\x0e\x76\x80\xd7\xf2\x03\x2d\x90\xbb\x7a\x84\x99\x33\x4b\xd8\xc7\x34\x80\x4e\x6a\x92\x77\x33\x56\xde\x21\xab\x43\xfc\xbd\x4f\xec\x98\x92\x8d\xa6\xc0\x51\x07\x74\xb4\xb8\x15\xb1\x2b\xc1\x21\xa0\xd3\x4c\x11\x25\xf5\x99\x30\x15\xee\xea\x79\xf9\x07\x29\xec\xf6\xd8\x25\x3e\x95\x43\x26\xb8\xeb\xbb\xca\x4f\x0b\xfd\xcf\xe6\xd7\xf5\xa7\x58\xbf\x18\x5b\x6a\x25\xb3\x3e\xcb\x96\xbb\xf4\x4f\x3c\xda\x87\x93\xde\x8a\x62\x17\xb3\x3b\x4c\x9f\xd7\x86\x88\xe7\xc9\x35\x87\xa5\x6b\x66\xcd\x83\xb1\x14\x5e\xec\x00\xde\x28\x29\xe0\x19\x11\xc7\xef\x33\xce\xdb\xb4\x77\xcb\x1a\x24\xdc\xe8\x80\x3a\xac\xb1\xf6\xdf\x36\x58\xe5\x02\xe8\x93\x46\xd6\xe1\x7a\xae\x97\xac\xd6\x23\x53\x02\x44\x1f\xd6\xca\x5c\xc8\x40\x33\xc6\xb6\xa1\xec\x9a\xd4\x30\x73\x3b\xed\xd3\xc5\x28\x6a\x63\x42\xb6\xf0\xdd\x09\x42\x88\xc7\x36\xc8\xd4\x8d\x97\xa3\x6b\x6b\x39\xa0\x98\x16\x17\x82\xe9\x28\x94\xe3\xd1\xc9\xa6\x0d\xf3\x29\x4f\x41\x72\xf4\x2d\xcf\xb2\x16\xfe\x38\x1a\x67\xa2\xc4\x36\xa4\x8e\x07\x56\x71\x9e\x32\x82\xd8\x6a\x7e\xc8\x9a\x3f\x7b\x64\x8e\xb7\xb9\xf4\x21\xd1\x35\xb3\x24\x74\xb9\x96\xe9\x75\xa6\x37\xdf\x94\x39\xf2\x78\xfd\x53\x7c\xe5\x99\xbc\xc5\x68\x7b\x8d\xa4\xc5\x11\xf7\x65\x9c\x73\x65\x81\x85\x67\x97\x2f\x05\xad\x0d\xef\xfd\x67\xcf\xcb\x1d\x7b\xba\x4d\xa6\x0f\x11\x72\xf1\xb0\xf1\xd6\x99\x8e\x2d\xf5\x3f\x8e\xf7\xe0\xa3\x33\x67\x52\x71\x0b\x71\x33\xb7\xe2\x5f\x00\x00\x00\xff\xff\x6a\x4d\xbc\x8f\xa5\x05\x00\x00")

func styleCssBytes() ([]byte, error) {
	return bindataRead(
		_styleCss,
		"style.css",
	)
}

func styleCss() (*asset, error) {
	bytes, err := styleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "style.css", size: 1445, mode: os.FileMode(436), modTime: time.Unix(1526777644, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tableHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x41\x6f\x9c\x3c\x14\xbc\xf3\x2b\xfc\x59\xb9\x7d\x09\xa6\x4d\xd2\x6e\x22\xe3\xaa\x6a\xa5\x54\xaa\xb4\xd9\x36\x69\x37\xca\xcd\xc0\x03\x9c\x18\x9b\xfa\x19\xb2\x88\xf2\xdf\x2b\x4c\x48\x7b\x6b\x4f\xc0\x7b\xa3\x99\x61\x3c\xe6\xff\x15\x36\xf7\x43\x0b\xa4\xf6\x8d\x16\x11\x5f\x1f\x20\x0b\x11\x11\xc2\xbd\xf2\x1a\xc4\x38\x92\xf8\x76\x7e\x23\xd3\x44\x7e\x92\x46\x76\x05\x70\xb6\xec\x66\x94\x56\xe6\x91\x38\xd0\x29\x45\x3f\x68\xc0\x1a\xc0\x53\x52\x3b\x28\x53\x5a\x7b\xdf\xe2\x25\x63\xa5\x35\x1e\xe3\xca\xda\x4a\x83\x6c\x15\xc6\xb9\x6d\x58\x8e\xf8\xae\x94\x8d\xd2\x43\xba\xbb\xfd\xff\x46\x1a\xbc\x3c\x4b\x92\xe3\xb3\x24\x51\x5e\x6a\x95\x1f\xbf\x4d\x12\xfa\xcf\x12\x1d\x42\x3c\xcb\xc8\x27\x40\xdb\x40\x50\x70\xa0\x41\x22\x20\xeb\xcf\xe3\x24\x7e\x75\x3a\x4b\x32\xa9\x75\x9c\x23\x52\xa2\x8c\x87\xca\x29\x3f\xa4\x14\x6b\x79\xba\x39\x3b\xf9\xb8\xbd\xfe\x74\xff\x66\xf3\x6d\x53\xdf\x97\x9f\xef\xae\x9d\x7f\xd8\xf7\x0f\x87\x0e\xaf\xec\xc5\xfe\x8b\x71\xdb\xc3\x6b\xfc\x71\x95\xf8\x12\xab\xfa\x7d\xef\xbf\xeb\xaf\xfb\x53\xdf\x3f\xde\xed\xef\xeb\xf3\xcd\xf6\xe2\xa1\xa5\x24\x77\x16\xd1\x3a\x55\x29\x93\x52\x69\xac\x19\x1a\xdb\x21\x15\xd1\xdf\x7e\x63\x4e\xf9\x26\x4c\xc9\x34\x51\x11\x71\xb6\x1c\x03\xcf\x6c\x31\x84\x10\x3a\x4d\x72\x2d\x11\x53\x9a\x39\x90\x45\xee\xba\x26\xc3\x90\x0f\x21\xe3\x48\x9c\x34\x15\x90\x23\x65\x0a\x38\x1c\x93\x23\xd0\xd0\x80\xf1\xe4\x32\x25\xf1\x4e\x3a\x3f\xd3\x06\x68\xf0\x21\xc6\x51\x95\xcf\xe0\x69\xe2\xd8\x4a\xb3\x92\x07\xde\x13\x84\x96\x0a\xc6\xd9\xbc\x11\xe3\x08\xa6\x98\x26\x2e\x7f\x7b\x5d\xf9\xe3\x9d\xf4\x75\x70\xfc\xe7\x70\x2b\x9b\xb9\x2d\x9c\x49\xc1\x99\x56\x2f\x1e\xc1\x14\x8b\x0d\xce\x3a\x2d\xa2\x88\x17\xaa\x5f\x75\x5b\x59\xc1\x49\x6e\x8d\x07\xe3\x03\x5b\xfc\x61\xf9\x08\x44\x85\xea\x67\x7c\x69\xad\x07\x17\xe2\x68\xc5\xce\x3e\x81\x83\x82\x64\x03\x79\xb1\xb6\xb6\xa1\x52\xbe\xee\xb2\x50\x82\xac\xcb\x6b\x69\x24\xb0\xd0\x5c\x2a\x9e\x0b\x3c\x5b\x6b\xe7\x9c\x57\xce\x88\xb3\x25\x6b\xce\x96\x8b\xf0\x2b\x00\x00\xff\xff\x7b\xd0\xd6\x7e\x20\x03\x00\x00")

func tableHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tableHtml,
		"table.html",
	)
}

func tableHtml() (*asset, error) {
	bytes, err := tableHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "table.html", size: 800, mode: os.FileMode(436), modTime: time.Unix(1526775532, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".style.css.swp": StyleCssSwp,
	"dirlist.html": dirlistHtml,
	"file.html": fileHtml,
	"notebook.css": notebookCss,
	"notebook.html": notebookHtml,
	"page.html": pageHtml,
	"style.css": styleCss,
	"table.html": tableHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	".style.css.swp": &bintree{StyleCssSwp, map[string]*bintree{}},
	"dirlist.html": &bintree{dirlistHtml, map[string]*bintree{}},
	"file.html": &bintree{fileHtml, map[string]*bintree{}},
	"notebook.css": &bintree{notebookCss, map[string]*bintree{}},
	"notebook.html": &bintree{notebookHtml, map[string]*bintree{}},
	"page.html": &bintree{pageHtml, map[string]*bintree{}},
	"style.css": &bintree{styleCss, map[string]*bintree{}},
	"table.html": &bintree{tableHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

