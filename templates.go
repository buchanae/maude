// Code generated by go-bindata.
// sources:
// _templates/.dirlist.html.swp
// _templates/dirlist.html
// _templates/notebook.css
// _templates/notebook.html
// _templates/page.html
// _templates/style.css
// _templates/table.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _DirlistHtmlSwp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x4d\x8c\x1c\x47\xd9\x7e\x9c\x59\xcf\xdf\xfe\xf8\xd3\xf7\x23\x7d\x02\x29\x7a\xdd\xb1\xc2\x8c\xbc\xdb\x3d\xf6\xda\xce\xc6\x9e\x99\xfc\x39\x24\x21\xf1\xc6\x71\x9c\x38\xd8\x58\x49\x4d\x77\xcd\x74\xed\xf6\x74\xf7\x76\x55\xcf\xee\x30\x0c\x1c\xe0\xc0\x25\x89\xe4\x48\x5c\xe0\x02\xe1\x80\x04\x22\x07\x0e\x48\x04\x94\x13\x09\x84\x43\x0e\x01\x84\x50\x20\x52\x40\x02\x24\x0e\x11\x1c\x92\x43\x0e\xa8\xba\x7b\xc6\xe3\x5d\x1b\x47\x91\x20\x42\xea\x47\x5a\xd7\x54\xd5\x5b\xef\xfb\xbc\x7f\xd5\x3d\xf2\x74\x1a\x4f\x3e\x74\x86\xd6\xcc\x06\x00\xfc\x17\xf0\xf2\x63\xb8\xf4\x8b\xff\xff\x14\x5e\x7f\x1a\x88\x3b\xb1\xaf\x62\xdc\x14\x9d\xd8\x76\x99\xcf\xfc\xc6\x91\x7f\x2e\xf7\xc5\x54\xa1\x25\x23\xdb\xea\x09\xe5\xc6\x1d\xd3\x0e\xfa\x56\x76\x9c\x5b\x7d\x16\x3b\xdc\x7a\x5a\xf1\x7e\xe8\x31\xc5\xa5\xe5\x88\xc8\x13\x52\x99\xae\xea\x7b\x37\xa7\x91\x23\x47\x8e\x1b\x21\x56\xdd\x95\xb5\x45\xac\x1e\x3d\x92\xb4\xfa\x6d\xc6\x41\xfa\x9f\xff\x7e\xe2\xe3\x66\x95\x23\x47\x8e\x1c\x39\x72\xe4\xc8\x91\x23\x47\x8e\x7f\x23\x54\xb8\x0f\x5f\x02\x70\x4b\x36\x7f\x3e\x1b\xf7\xed\x1a\x73\xe4\xc8\x91\x23\x47\x8e\x1c\x39\x72\xe4\xc8\x91\x23\x47\x8e\x1c\xff\xb9\x60\x0e\x70\xcb\x3e\xe0\x62\x21\xfd\xff\xff\xc9\xf7\xff\x77\x0f\x00\x7f\x39\x00\xbc\x73\x00\xf8\xf1\x01\xe0\xb3\x07\x80\x17\x96\x80\x2b\x4b\x80\xbd\x04\x74\x96\x80\xf5\x25\xc0\x5a\x02\xf6\x2d\x01\x7f\x5f\x04\xfe\xb4\x08\xbc\xbd\x08\xfc\x66\x11\xf8\xc9\x22\x70\x65\x11\xf8\xdd\x02\xf0\xc6\x02\xf0\xda\x02\xf0\xdc\x02\xf0\xec\x02\x10\x2c\x00\x4f\x2d\x00\xa7\x17\x80\x77\xe7\x81\x3f\xce\x03\x6f\xcd\x03\xbf\x9a\x07\x7e\x39\x0f\x7c\x6f\x1e\xf8\xee\x3c\xf0\xe2\x3c\xb0\x31\x0f\xd4\xe6\x81\xb9\x79\xa0\x30\x0f\xfc\xa1\x0a\xbc\x53\x05\xde\xac\x02\xaf\x56\x81\x9f\x56\x81\x17\xab\xc0\x0b\x55\xe0\x4a\x15\x70\xab\xc0\xdd\x55\x60\xa5\x0a\xdc\x5a\x05\x3e\x59\x05\x3e\x51\x05\xde\xaf\x00\xef\x55\x80\xb7\x2b\xc0\xef\x2b\xc0\xeb\x15\xe0\x95\x0a\xf0\x72\x05\xf8\x51\x05\xb8\x52\x01\x86\x15\x80\x55\x80\xcb\x15\xe0\x73\x15\x60\xbd\x02\x9c\xaa\x00\x27\x2b\x80\x51\x01\x4a\x15\xe0\x83\x32\xf0\x7e\x19\x78\xaf\x0c\xbc\x5d\x06\x5e\x2b\x03\x2f\x95\x81\xaf\x95\x81\x2b\x65\xe0\xf9\x32\xf0\x5c\x19\x78\xb6\x0c\x44\x65\x80\x95\x81\x13\x65\xe0\xd6\x32\x50\x2d\x03\x7f\x2d\x01\x6f\x95\x80\x57\x4b\xc0\x0f\x4b\xc0\x4b\x25\xe0\xeb\x25\xe0\xb9\x12\xf0\xd5\x12\xf0\x95\x12\xf0\xe5\x12\x30\x2a\x01\x97\x4a\xc0\xa3\x25\xe0\x74\x09\xb8\xbb\x04\xdc\x55\x02\xfe\xb7\x04\x7c\x50\x04\xfe\x5c\x04\xde\x28\x02\x2f\x17\x81\xef\x17\x81\xef\x14\x81\x6f\x17\x81\x6f\x15\x81\x6f\x16\x81\x41\x11\xe0\x45\xe0\x42\x11\x58\x2f\x02\x67\x8a\x00\x8a\xc0\x0f\xf6\x03\x1b\xfb\x81\xbb\xf7\x03\xff\xb7\x1f\x28\xed\x07\xfe\x36\x07\xbc\x3e\x07\xbc\x34\x07\x7c\x63\x0e\xf0\xe7\x00\x31\x07\xdc\x3b\x07\xd4\xe7\x80\xb9\x39\xe0\xb7\x05\xe0\xd7\x05\xe0\xcd\x02\xf0\xf3\x02\xf0\xb3\x02\xf0\x4a\x01\x88\x0b\xc0\x66\x01\xd8\x28\x00\x9d\x42\x5a\x47\x07\x0b\x1f\x73\x51\xdf\x00\x4d\xcb\x55\x7d\xaf\x8d\xa6\xd5\x09\x9c\x61\x5b\x2f\x74\x83\x40\xf1\xa8\x0d\xa2\x66\xd8\x3e\x1b\x6c\xf3\x88\x3b\xd4\x19\x52\x93\x91\x1b\xf1\x6e\xcb\x70\x3f\xd2\x21\xa5\x42\xf9\x91\x0f\x9e\xb4\x6e\xfc\xeb\x18\xa3\x9d\x0c\x4d\x8b\xb5\x9b\x56\xd8\x46\x73\xa2\x12\x4d\x4b\xda\x91\x08\x55\x1b\xe3\x53\xa8\xe8\xbf\x8a\xe8\x52\xcd\x66\x9e\xb7\x1e\x6c\xd7\xa9\x1b\xfb\xb6\xc9\xc2\xd0\x1b\xd6\xec\xc0\x57\x7c\x47\x2d\x13\x8b\x7a\xb2\xae\x25\x95\xe8\xf3\x20\x56\xd4\x22\xc9\xd5\xf9\x74\x52\xf3\x98\xe2\xd1\x32\x6d\x33\xa1\x12\x21\xdb\xe3\x2c\x9a\x6c\x66\x27\x92\x8d\x01\x8b\x28\xb3\x43\x2d\x12\xfd\x3e\x77\x04\x53\x9c\x6e\xbf\x9d\x0e\x66\x72\x5a\x2c\xe1\x94\x90\x3a\x38\x95\xb9\x09\xaf\x19\x62\x7e\xec\x79\x13\x63\x09\x33\x6a\x25\x67\x95\x08\xfc\x5a\x9d\x46\x13\x1e\xa9\x0e\x6a\x91\x72\x85\x4c\x55\x51\x4b\x0f\x71\x9f\xfb\x4a\x9e\x42\x25\xe2\x2a\x8e\xfc\x5d\x87\xf5\xd9\x29\xd7\xc9\x16\x39\xbc\x13\xc4\xbe\xcd\x6b\x7a\x25\x0d\xc5\x32\xcd\x90\x1f\xc1\xb2\xc8\xe3\xcc\x11\x7e\x8f\xb8\xd3\xe3\xcb\x24\x7c\xa9\x38\x73\x28\xe8\x92\x72\x39\xa9\x88\x09\x4f\xf8\x3d\x53\x4b\xae\x53\x5f\x78\x9e\x90\xdc\x0e\x7c\x47\x9a\xf4\x50\x97\x9e\x99\x6a\x7b\x86\x84\xa4\x90\x49\xc9\x9d\x65\x52\x91\xe8\xf5\x78\x94\xa8\x98\xb2\x09\x7c\x3d\xd7\x8a\x3a\x7c\x22\xc1\x1d\x93\xce\xcf\x0a\x6d\x0b\xcf\xd3\xfb\x3a\x21\xdc\x21\xd6\xd5\xa1\x12\x8a\xa4\x0a\x42\x49\x1d\xae\x99\x66\x7b\xdd\x20\xd2\xca\xce\x25\xf1\x90\xc4\xa6\x4a\x96\x49\xb9\x4c\xe7\x41\x92\x17\xf8\x3d\x3d\x0a\x95\x84\x56\xf8\x31\x97\xa4\x02\x6d\x41\xf8\x83\x60\x53\x93\x4d\x4c\xfa\x81\x02\xc6\xcb\x74\xa2\xd1\xa8\xd7\x41\x24\x39\x8b\x6c\x97\x5a\x64\x18\x20\xd2\xe1\xdd\x4a\xca\x4b\xaf\xe2\x50\xcd\xd0\x4d\x61\xd4\xcd\x4d\x3e\x0c\x23\x2e\x65\xed\x9a\x50\x27\x79\xe1\x03\x1d\x60\x8c\x41\xa4\xff\x26\xff\x12\xa5\x09\xcc\x26\x87\x6a\xdc\xab\x9b\xdd\xc0\x8e\x65\xad\x9e\xac\xe9\x0a\x8b\x76\x4c\xc5\xa5\xaa\xf9\xac\xcf\xeb\x5a\x8d\xde\xd0\x24\xb8\x47\x2d\xe2\x9e\xbc\x24\x2e\x4f\xd7\xb4\x90\xae\x30\xd6\xe7\xd9\x7a\x37\x88\xa8\xa6\xb7\x04\xb5\xa8\x71\x8a\x04\x35\xd3\x6d\xd3\xe3\x7e\x4f\xb9\xa7\x48\x1c\x3e\x9c\xb0\x9b\xb0\x9a\x72\x1a\x93\xcd\x94\xed\xce\x98\x8c\x76\xb4\x72\xbe\x4d\xe7\x78\xef\xfe\x9d\xb0\x96\xc6\x40\x73\x55\xd1\x70\x56\xc7\x87\xf4\xef\xaa\xe0\x2e\xd1\x89\xb0\xed\x09\x7b\x73\x2a\xac\xc3\xd1\x0b\x26\x31\xd0\x33\xed\x89\x29\x15\x8b\x94\xbc\x20\x94\x5b\xdb\xfa\x57\x46\x88\x74\xdd\xc8\xc0\xe3\xa6\x17\xf4\x6a\x5b\xf5\x99\xe6\x0a\xd2\x48\xd4\xb6\x96\x29\x25\x08\x8c\xeb\xd3\x68\x1c\xaa\x19\xb7\xa5\x02\xc6\xb5\xfe\xf3\x81\x19\x46\x7c\xc0\x7d\x75\x9a\x77\x59\xec\xa9\x64\x5d\x3b\xc6\x07\xe6\xb6\x2b\x74\xd5\xb5\xe8\xd8\x1d\xa9\x75\xcb\x22\xc3\x32\x68\x93\x0f\x13\xce\x59\x01\xee\xcd\x1b\x5d\xe5\x93\x0e\xba\x09\x63\x7e\x3d\xd5\x47\x56\xb3\xd4\xef\x3a\x31\x53\xf6\x87\x5b\x64\x5f\x35\x62\x53\x8b\x6c\x53\x05\x8f\xe8\x2b\xff\x3e\x26\xf9\x94\x31\xf3\x42\x97\x4d\x8a\xd5\xce\xf2\x90\xdc\x63\xd4\xa2\xc7\x55\xa4\x6f\x8e\x6e\x14\xf4\xef\x73\x59\x74\x5f\xe0\xf0\x29\x8f\xfa\x75\x5c\xc8\x78\xf6\xb9\x62\x0f\xf3\x61\xc6\x71\x36\xfa\x33\x87\xaf\xd3\x81\x7b\x1a\x4f\x93\xe4\x9e\x34\xc3\x58\xba\xba\xb0\x40\x59\x8a\x93\x05\x7d\xcd\xd6\x33\xb6\xd9\x95\x9b\x96\x9f\x9e\xd4\xea\xbb\xdc\x3d\x54\x33\xcc\xec\xe7\x9c\xe4\x09\x62\x46\xdd\xe4\xcc\x76\xaf\x1a\x15\xcb\xc4\xbd\xc4\xae\x56\x38\x7b\x7b\xe8\x79\x16\xa7\x6b\x1b\xc9\xba\x74\xcf\xca\xc5\xcb\x56\x3d\x3d\xc2\x3d\x7d\xd1\x5f\xba\x8c\x49\xc1\x66\x53\x34\xd3\x07\x23\xa9\x61\xc8\x5b\x86\x66\x67\x6d\xb0\x01\x4b\x57\x8d\x76\x12\xa4\x28\x90\x32\x88\x44\x4f\xf8\x2d\x83\xf9\x81\x3f\xec\x07\xb1\x34\xda\x57\x1f\xaa\x44\xc2\x57\xbc\x17\x09\x35\x6c\x19\xd2\x65\x47\x8f\x9f\x58\x59\xe5\x4e\xd4\x1f\xc6\x8f\x35\xb6\x4f\x1c\xef\xae\xf5\xba\xf7\xca\xad\x60\xfb\xf3\x1b\x9f\xe1\x47\xc5\x99\x13\x7e\xc3\x7f\xd8\x16\x67\x9f\x08\xd7\x86\x87\xef\xb8\xbf\xa5\x2f\x41\x19\xd9\x57\x1f\xf1\x76\xe0\x70\x73\x63\x2b\xe6\xd1\x30\x79\xce\xa7\x1f\x57\x56\xcd\x55\xf3\x88\x29\x3d\xd1\x37\xfb\xc2\x37\x37\xa4\x31\xe1\x0f\x34\x1d\x31\x20\xdb\x63\x52\xb6\x8c\x88\x33\xa7\xcf\x8d\xf6\x68\x44\xe6\xb9\xe4\x33\x8d\xc7\x4d\xcb\x11\x83\xe4\x5d\x20\x19\x89\x9a\x56\xec\xe9\x71\x34\x22\xee\x3b\x34\x4e\x0b\xa6\xe9\x89\xf6\xf4\x95\x43\x2b\x78\xf0\xdc\xfd\x9f\xa6\xf1\xd8\x68\x37\xc5\x44\x7f\x97\x51\x97\xad\xe8\xcd\xf3\xc3\x90\xa7\x9b\x96\x48\xcc\xad\xb3\xcc\x98\x7e\x07\xf1\x44\xa6\x3f\x62\x7e\x8f\x93\xf9\x88\x4e\x70\x62\xa7\x19\x7b\x13\x65\x59\xe2\x8d\xf6\x35\x2e\x64\xab\x2b\xdb\x11\x0b\x43\x1e\xa5\x99\x68\x0a\x3f\x8c\x15\x09\xa7\x65\x64\xcd\x3f\x93\x37\x83\xa4\x1a\x7a\x5c\x1f\x95\xa1\xc7\x86\x27\xfd\xc0\xe7\x06\x59\xb3\xae\xee\x76\x36\x75\x77\x34\x12\x5d\x3a\x24\x7c\x87\xef\x8c\xc7\x4d\x19\x32\x7f\xc2\xc2\x8e\xe2\x7e\x67\x45\xf2\xd0\x68\x5b\x4d\x4b\xef\xb4\x47\x23\xee\x3b\xe3\xf1\x68\xa4\x3b\xea\x10\xf7\xb8\x7e\x73\x30\xcf\x32\xe5\x6a\xb7\x67\x02\xb7\x7b\x2f\x49\xc7\x74\x71\x26\x4e\x9a\x92\x27\xf5\xec\x3a\x02\x53\xbe\x93\x68\xce\xc4\x33\xa5\xbc\x3c\x3d\x43\x27\x5b\x64\x9e\xd5\x37\xf7\x9e\x20\x77\x74\x49\x24\xde\x48\x1d\xe8\xf4\xa5\xb3\x69\xb9\x9c\x39\x7b\x4b\x60\x4f\x41\xf8\x9b\x14\x71\xaf\x65\x84\x11\xef\x72\xa5\xc3\xbe\xa7\x3c\x2c\x63\x4a\x4e\x74\x89\x6f\x65\xa5\x61\x74\x03\xcf\xe1\x91\x91\x2a\xdb\x5b\x09\xb8\x46\x7f\x92\x40\xe9\x72\xae\x66\x2d\x3c\x9e\xac\x26\x11\xbc\xa9\xfc\xa4\x81\x62\xc9\xcd\x6e\xe0\x2b\xb6\xcd\x65\xd0\xe7\x49\x13\x45\xdc\xe3\x4c\x72\x69\x0d\x8e\x9b\x0d\xf3\xc8\xaa\x65\x4b\x69\x31\xcf\x33\x6d\x29\x8d\x5d\x1d\xbc\xba\x76\x6c\xe5\xf4\xfa\xa3\x0f\x5e\x3c\xb1\xf6\xc4\x9a\x7b\xb1\xfb\xf0\x53\x8f\x46\x6a\xe3\xc2\x60\x63\x27\x96\x0f\x04\x77\x5e\x78\xcc\x8f\xd6\x77\x8e\xca\xad\x07\x1a\xaa\x2b\x7b\xee\x3d\x03\xf5\xa4\x77\xee\xc2\xaa\x1a\x6c\x3e\x75\xe1\xa2\x7b\x7c\x6d\xfd\xce\x8d\xd0\xb8\xe1\xcd\xf1\x61\xbd\xd0\x1e\x48\xb3\x17\x04\x3d\x8f\xb3\x50\xc8\xc4\x0d\x5b\xca\xbb\xba\xac\x2f\xbc\x61\xeb\xec\xf9\xc3\x8f\x33\x5f\x9e\x3c\xd6\x68\x2c\x1f\x6b\x34\x84\x62\x9e\xb0\x97\xef\x68\x34\x52\x13\x4a\x28\x8f\x27\x5d\x79\x5e\x7f\xa2\xf1\x98\xbe\x40\x67\xd2\xaf\x08\xe9\x1e\x9a\x69\x05\x34\xb3\x6f\x23\x07\x9d\xc0\xd6\x1d\x45\xe9\xfc\x1f\x01\x00\x00\xff\xff\xaf\x47\x62\x22\x00\x30\x00\x00")

func DirlistHtmlSwpBytes() ([]byte, error) {
	return bindataRead(
		_DirlistHtmlSwp,
		".dirlist.html.swp",
	)
}

func DirlistHtmlSwp() (*asset, error) {
	bytes, err := DirlistHtmlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".dirlist.html.swp", size: 12288, mode: os.FileMode(420), modTime: time.Unix(1526747625, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dirlistHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x51\x73\xdb\xc6\x11\x7e\x16\x7e\xc5\x1a\xd5\x64\xc0\x11\x75\xa0\x2d\x5b\x56\x2c\x80\x9d\xd4\x71\x93\xd6\x89\xa2\xc8\x4a\x95\xb1\xc7\x33\x39\x02\x0b\xe0\xa4\xc3\x1d\x74\x77\x20\xc5\xb2\xf8\xef\x9d\x3d\x00\x22\x4b\xab\x6d\x5e\xc2\x17\xe2\xf6\x16\xdf\x7e\xfb\xed\xee\xf1\x98\x3c\xcb\x75\xe6\xd6\x0d\x42\xe5\x6a\x39\x0f\x92\xf1\x0b\x79\x3e\x0f\x00\x12\x27\x9c\xc4\xf9\x66\x03\xec\x9a\x9e\xa0\xeb\xe0\x5f\xf0\x23\x6f\x73\x4c\xe2\x7e\x8f\xbc\xa4\x50\x77\x60\x50\xa6\xa1\x75\x6b\x89\xb6\x42\x74\x21\x54\x06\x8b\x34\xac\x9c\x6b\xec\x9b\x38\x2e\xb4\x72\x96\x95\x5a\x97\x12\x79\x23\x2c\xcb\x74\x1d\x67\xd6\xfe\xb9\xe0\xb5\x90\xeb\xf4\xf2\xfa\xe8\x03\x57\xf6\xcd\xcb\xd9\x6c\xfa\x72\x36\x13\x8e\x4b\x91\x4d\x5f\xcf\x66\xe1\xef\x0e\xd1\x5a\x64\x14\x86\xaf\xd0\xea\x1a\x7d\x04\x83\x12\xb9\x45\x1b\x2f\x5f\xb1\x19\x7b\x7e\x42\x21\x63\x2e\x25\xcb\xac\x0d\x41\x28\x87\xa5\x11\x6e\x9d\x86\xb6\xe2\x27\x67\x2f\x8f\xbf\xbd\xf8\xe9\xfb\x8f\xa7\x67\xbf\x9c\x55\x1f\x8b\xf7\xbf\xfe\x64\xdc\xed\xcd\xf2\xf6\xa1\xb5\xdf\xe9\xaf\x6f\x7e\x56\xe6\xe2\xe1\x85\xbd\xff\x6e\xe6\x0a\x5b\x56\xdf\x2c\xdd\x3f\xe4\xd5\xcd\x89\x5b\xde\xfd\x7a\xf3\xb1\x7a\x75\x76\xf1\xf5\x6d\x13\x42\x66\xb4\xb5\xda\x88\x52\xa8\x34\xe4\x4a\xab\x75\xad\x5b\x1b\xce\x83\xff\x97\x06\xa9\xfc\xc1\x5b\xa1\xeb\x7a\xff\xcd\x06\x0c\x57\x25\x02\xfb\x41\x58\x07\x5d\x17\x00\x78\xab\x28\x00\xef\x81\x5d\x53\xe9\xc2\x42\xcb\x1c\x4d\x38\x6e\xef\x04\x69\x0c\x16\xe8\xb2\x6a\x37\xc4\xf7\x57\xef\xfe\x0a\x5d\x17\x7b\x5d\x3d\x18\xaa\xbc\x7f\x77\xfb\x9c\xc4\x7d\x0b\x24\x0b\x9d\xaf\x7d\x01\x5a\x09\x99\xe4\xd6\xa6\xe1\xc2\x20\xcf\x33\xd3\xd6\x0b\xbb\xc5\xe8\x69\x1e\x0a\x95\xe3\xc3\x14\x0e\x51\x62\x8d\xca\xc1\x9b\x14\xd8\x25\x37\xce\x8e\xe4\x3c\xbd\xf9\x66\x23\x8a\xc1\xb9\xeb\x12\xdb\x70\x35\x82\x7b\xdc\x63\x8b\x4d\x38\x8f\x93\x98\x76\xe6\x9b\x0d\xaa\xbc\xeb\xfa\xac\x47\x64\x76\xc9\x5d\x05\x5d\x97\xf0\x6d\x6a\xfb\x7b\xe1\x7c\xd7\x78\xc1\x6b\xea\xdf\x24\xe6\x64\x46\x69\x69\xf5\x84\xc3\xa3\x08\x49\x2c\xc5\x97\x1a\x25\x71\x2b\xbd\x20\x42\x35\xad\x03\x91\xa7\xa1\x45\x6e\x48\x63\x1a\xa4\x34\x74\xf8\xe0\x42\xf0\xe5\x4d\xc3\x5c\xd8\x46\xf2\xf5\x1b\xa5\x15\x86\x10\xcf\x83\x20\xc9\xc5\x72\x4c\x36\x17\x46\x0a\xeb\x8e\x57\x86\x37\x0d\x9a\x70\x4f\xe8\x61\xdb\x9b\x9f\xee\x04\xd2\x72\x57\x81\xb1\xb8\xe1\x3c\x11\x23\x4a\xc1\xa1\xe0\xc7\x7e\x84\xa9\x5b\xfc\x66\x2c\xfc\x4c\xef\x48\x32\x26\xfb\x65\xaa\x49\x9c\x8b\xe5\x1e\x71\xea\x80\x1a\xbd\xbe\xec\xca\x3f\x7b\x98\xc1\xd1\x66\x46\x34\x2e\x00\xb0\x26\xdb\x4e\x67\xa6\x73\x64\xb7\xf7\x2d\x9a\xb5\x9f\xcc\xfe\xf1\xf8\x84\x9d\xb0\xe7\xcc\x4a\x51\xb3\x5a\x28\x76\x6b\xc3\x00\xf6\xe6\xf2\xc5\xab\xd3\xe3\x13\xcc\x4d\xbd\x6e\x7f\x9e\xad\x4e\x5f\x15\x67\x65\xf1\x17\x7b\xaf\x57\xff\xbc\xfd\x3b\xbe\x10\x3f\x9e\xaa\x99\x7a\x9f\x89\xcb\x5f\x9a\xb3\xf5\xd1\xeb\x77\x29\x21\xfc\xb7\x29\x4c\xe2\x9e\xdd\x96\xe7\x4e\xd9\xe2\x5b\xbe\xe4\xbd\x95\xe6\x6f\xc9\x0d\x28\x5e\xa3\x85\x14\x3e\x7d\xf6\x4b\x94\xc3\xc2\xaf\xb8\x6c\x2a\x6e\x1e\x20\x05\x85\x2b\xb8\xc2\xf2\xdd\x43\x13\xc5\x9f\xbe\x39\xfe\xf8\x39\x9e\x78\x8f\xbe\x35\x20\x85\x30\x0c\x82\xc3\x28\x64\x43\x4d\x41\x0a\xe0\xe1\x84\x21\xcf\xaa\xa8\x68\x55\xe6\x84\x56\x91\x98\x02\xca\x09\x6c\x02\x00\x7a\x99\x28\x41\x0a\x87\x11\xca\x09\xa3\x45\x34\x61\x4e\xff\xa0\x57\x68\xde\x72\x8b\xd1\x24\x80\x9e\x1f\x6b\x5a\x5b\x45\xe4\x41\x26\x94\x83\x01\xe5\x24\xe8\x26\x3e\x2e\x8d\x71\x38\x61\x77\xb8\x6e\x0c\x5a\xbb\x0d\x89\x4b\x8a\x47\x82\x69\x65\xb5\x44\x26\x75\x19\xe1\x92\xad\x2a\x91\x55\x13\xda\x10\x05\x90\xa1\x46\xc7\xdf\xe3\xba\x67\x07\x60\xd0\xb5\x46\x05\x00\x5d\x30\xb0\xcd\x20\x85\x0f\xce\x08\x55\xb2\xc2\xe8\xfa\x6d\xc5\xcd\x5b\x9d\xe3\x0e\x58\x8f\x35\x88\xc6\x1c\x5a\x17\x65\x93\x11\x90\x5e\xcf\xbe\x48\xcf\xa3\x0f\x22\x1e\xa5\x90\x05\x00\xb9\xee\xd7\x51\xff\xb5\xcb\xd1\xc7\x81\x34\x85\xe7\x27\x23\xec\x9e\xf7\x14\x9c\x69\x71\xf2\x44\x0a\x71\x0c\x61\x1c\xc2\x1d\xae\xa1\xd0\x63\xe1\x9e\x80\x7e\xf9\x7a\x84\xc6\x25\x6b\x0c\x2e\x51\xb9\x6f\xb1\xe0\xad\x74\x51\x8f\x7b\x18\x85\x7f\x1a\x8e\x84\x09\x2b\x74\xd6\xda\x21\x15\xaa\x45\x30\x2a\xbf\x65\x76\x3f\x85\x52\xf7\xa0\xbb\x45\xb8\xa7\x97\x88\x4a\x44\xea\x0a\x48\x61\x76\x0e\x02\x92\xa1\xe4\x12\x55\xe9\xaa\x73\x10\x47\x47\x23\xa1\xb1\x5f\xa9\x1f\xc9\xe7\x93\xf8\xfc\x68\x47\x09\x29\x75\xc6\x68\xa3\xb4\xc8\x89\x59\x47\xc7\xf3\x8d\x70\x55\x74\xff\x58\x8c\x7e\x7f\x64\xd5\x7f\xfa\x36\xcc\xa4\xc8\xee\x86\x44\xff\x43\x44\xfa\x8c\x47\x7c\xef\xba\x4d\x7d\xcf\xb1\x1b\x35\x77\x66\xbd\x43\x7d\x7f\x90\xc6\xfa\x02\x74\x90\x71\x97\x55\x4f\xb6\xde\x1f\xaa\xd0\xd8\xa6\xe4\xbc\x23\xce\xef\xca\xaf\x7b\x72\xf0\x72\x5c\xe8\x56\x65\xb8\x3f\x81\x3d\x87\x7b\x48\xb7\x9d\xb7\x7b\x76\x74\x53\x38\x9d\xcd\x26\x93\x20\x88\x63\xb8\xf2\xa1\x2c\x70\x18\x41\xa6\xe0\x2a\xee\xa6\xc0\x2d\x48\xad\x4a\xfa\x16\x8e\xba\xc9\x09\xd5\xa2\x05\xa7\x61\x81\x20\xd4\x52\xdf\x61\x3e\x85\x95\x90\x12\x94\x76\x04\xb6\x40\x70\x46\x94\x25\x1a\xcc\x19\x5c\x57\xf8\x08\xda\xbb\x2d\x10\x32\x2e\x25\xe6\xc0\x0b\x87\x86\x70\xad\xd3\x8d\x85\x05\x0a\x55\x8e\x7b\x85\x36\x04\x76\x01\xb5\x90\x52\x58\xcc\xb4\xca\x2d\x83\xbf\x15\xf0\x9b\xa8\x6b\xcc\x05\x77\xf8\x1b\x08\x0b\x0d\xb7\x96\x28\x0c\x31\xc1\xed\x06\xd4\x8a\xd6\x04\x24\x91\xe7\x04\x8f\x79\x89\x53\x10\xca\x3a\xe4\x39\xe8\xc2\xfb\x3b\xc3\x85\xa4\x73\x66\x67\x98\x76\x65\x9d\xc2\x8a\x0b\x37\x85\xc7\xc8\x24\xf0\x81\x3f\x51\x45\x8d\xba\x75\xe7\xc1\x41\x5f\xae\xc7\xd0\x91\x77\xf1\x3e\xa4\x5a\x7f\xf0\xba\x4a\xd8\x29\x70\x53\xd2\x99\xcf\x4d\xd9\xd2\x35\xc1\x9e\x0f\x7e\x92\x93\x1c\xe9\x3e\xc4\xc1\x10\x83\x5a\xac\x95\x92\xbc\x0f\xa8\x95\x9e\xed\xb0\xa1\x57\x18\x6f\x1a\xb9\x8e\x86\x68\x7d\x98\x09\x79\x77\x63\x00\x92\xf6\x42\xaf\x20\xdd\x26\x02\x5f\x7d\x05\xcf\xb6\x49\x1c\x64\x12\xb9\xb9\xee\xd7\xd1\x60\xf7\x20\x5b\x12\x16\xdd\xe8\xe0\x19\xf7\xe2\x78\x27\xa2\x35\x04\xf9\xdf\x9c\xba\xf3\xa0\x3b\x0f\x76\x7f\x3a\x0b\xad\x1d\x1a\x7f\x5f\x69\xe6\x97\x74\x64\x63\x0e\x8b\x35\x3c\x5e\x46\xc6\x5f\xfd\x52\xb8\xaa\x5d\xf8\x1f\xfc\x45\x9b\x55\x5c\x71\x8c\x6b\xfa\xff\x10\xce\xeb\xfe\x6f\x04\xdd\x3d\x1a\xba\x66\x8c\x98\x41\x12\xf7\xb7\xce\x24\xee\xff\x8e\xfc\x3b\x00\x00\xff\xff\x1f\x24\xf3\xe1\xa6\x0c\x00\x00")

func dirlistHtmlBytes() ([]byte, error) {
	return bindataRead(
		_dirlistHtml,
		"dirlist.html",
	)
}

func dirlistHtml() (*asset, error) {
	bytes, err := dirlistHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dirlist.html", size: 3238, mode: os.FileMode(436), modTime: time.Unix(1526747625, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _notebookCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x96\xcf\x6f\xa3\x38\x14\xc7\xef\xf9\x2b\x2c\x8d\xe6\x32\x12\x19\x60\x27\x49\x87\x9c\x66\x9a\x76\x3b\xda\xee\x74\x34\xad\xb4\x67\x63\x3f\xc0\x8a\xb1\x2d\xdb\x34\x89\xaa\xfe\xef\x2b\x42\x68\xb0\x03\x94\xdd\x72\x68\x42\xde\xe7\xfb\x7e\xf2\x4c\x2a\xe9\x01\xbd\xcc\x10\x4a\x31\xd9\xe6\x5a\x56\x82\x06\x44\x72\xa9\x13\xf4\x21\x4a\xeb\x6b\x3d\x7b\x9d\xcd\xb5\x94\x36\x20\x52\x58\x10\xf6\x68\xbe\x63\xd4\x16\x09\x5a\x2d\x3e\xae\x67\x08\x95\x58\xe7\x4c\x24\x28\x44\xb8\xb2\xf2\x48\x10\xe0\x3c\x30\xb2\xd2\x04\xd0\x9c\x14\x5a\x96\xf8\x08\x2a\x4c\x29\x13\x79\x82\xe2\x50\xed\x51\x14\xaa\x7d\x2d\x90\x4a\x4d\x41\x07\x1a\x53\x56\x99\x04\xfd\x51\xdf\x6d\x45\x64\x65\x55\xd5\x78\x6d\xfd\x2c\xd4\x1e\x85\x35\xb7\x2b\x98\x85\xc0\x28\x4c\x20\x41\x4a\x43\xb0\xd3\x58\xd5\x3f\xc8\x67\xd0\x19\x97\xbb\x60\x9f\x20\x43\xb4\xe4\x7c\xdd\x9f\x24\x00\x0c\x05\xd0\x09\xb6\x89\xf3\x75\x66\x71\xca\xa1\xa9\x57\x03\x10\xc9\x39\x56\x06\x12\xd4\x7e\x3a\xab\x25\x28\x52\x7b\x64\x24\x67\x14\x7d\xc0\x71\x7d\xf5\x07\x71\xcc\x62\x3d\xab\xf5\xa9\x5b\xa4\xc5\x5b\x8d\x5e\x67\xb6\x18\x6a\xd4\x29\x87\x5e\xea\xf8\xf7\xf9\x13\xfa\xfe\x86\xa1\x4f\x9f\xcf\x1d\x41\xad\x46\x76\x95\x5d\x65\xf1\xba\x4f\x3e\x5e\xc5\x57\x71\x8c\x5e\x6b\x99\x1b\xad\xa5\xee\x2a\xcc\x41\xeb\x8e\xcc\xd7\x65\x18\x2e\xc2\x5e\x99\x08\xc2\x30\x0a\x1b\x99\x7b\x26\xe0\xa9\xae\xe5\xd3\xc6\x11\xe3\xa2\xae\x00\x7a\x06\x6d\x19\xc1\x3c\xc0\x9c\xe5\x22\x41\x56\xaa\xf5\x39\xbd\x70\x7d\x1e\xb8\xf5\x5b\xad\xc3\xb5\x27\xed\x0b\x37\xad\x6b\x1b\x57\xcf\x4c\xab\xf6\xbe\xf2\x69\xdc\x8f\xd3\xfd\x36\x5b\xed\x77\xca\x8c\xe2\xf8\x90\xa0\x94\x4b\xb2\xed\x84\x71\xc7\xf2\x82\xb3\xbc\xb0\x4e\x28\x05\x47\x2f\x17\xcc\xc9\x41\x14\x86\x1f\x3b\x02\x3f\xab\x32\x05\x6d\x7a\xd3\x41\x2f\xa7\x58\x03\x5d\xbb\x48\x50\x38\xff\x02\x65\x37\x99\xe6\x4e\xfb\xff\x52\xd6\x53\xfc\x9f\x82\x7f\xc1\x61\x27\xb5\x33\x55\xf3\x6d\x67\x22\x96\x4b\xfa\x15\x32\xc7\xf6\x5a\x0a\x63\xb1\x70\xcb\xb2\x25\xe3\xd0\x06\x08\xc7\x1a\x5b\x26\x85\xcb\xd1\x71\xee\x27\x2e\xe1\xb8\x20\x5c\x4a\x74\x67\xff\x6b\xbc\x5c\xc5\x0e\xf5\xcb\x40\x45\xa5\x8b\xa8\x71\x47\xbf\xc1\x80\x7e\x06\xaf\x12\x7a\x1c\x7a\x3a\x28\x2f\x30\x3b\x00\xd4\x79\x7c\xb3\x56\xb3\xb4\xb2\x2e\x22\xba\xcf\x31\x5e\x42\x1c\xc3\x19\xb9\xe6\xd8\xb8\x9d\x16\x64\xcc\xbc\xaf\x35\x42\x8e\xc4\xb4\x01\x22\x35\xb6\xde\x56\x10\x74\xc4\xc9\xcd\x9e\x80\xba\x68\xa4\x80\x11\xe4\xb6\x12\xe4\x92\xc8\x46\x88\x07\x5b\x80\x17\xd3\x7e\xc4\xfc\x09\xe7\xae\xb1\x1d\x18\x90\x7b\x66\x41\x63\xee\x3e\x3c\x5d\x61\xb8\x8a\xb2\xcc\xb1\xdd\x60\xaf\x63\xbc\x5b\x1d\x58\xd2\x74\xf5\xc5\x01\x1e\xad\x66\xc2\x8d\xc7\x4c\x21\xbe\x65\x19\xdb\xbb\x18\x9e\xc2\xd5\x87\x83\x65\x64\xeb\xa2\xe9\x14\xf4\xba\xc0\x6e\x95\x0d\x99\x82\x6d\x80\xb3\xb2\xbe\xe1\xb0\x94\x4f\x62\x25\x71\x3d\x4e\xaa\xe6\x46\x56\xfe\x16\x35\xf1\x14\xf0\xc6\x10\xec\x3d\xa4\x06\xc6\x1b\xde\x80\x77\xa0\x81\xfa\xb1\x16\x53\x5c\xfe\x10\x16\xb4\x92\xee\x90\x19\x36\x05\xbd\x1c\x7b\xb3\x9f\xc2\xfd\x86\x1c\xbc\xd1\xd1\x53\xb8\x47\x26\x72\xbf\xac\xd1\x24\xf0\x50\xa6\x7e\x86\xef\x0c\x79\x73\x6e\x39\x48\x39\xde\x88\x86\xf8\xce\xdc\xbd\x51\xa6\x53\xa8\x5b\x2e\xb1\xbb\x07\xcb\x6c\x0a\x77\xe7\xd5\xb1\x2c\xa6\x50\x75\xcb\x73\x3f\x39\xf6\x1f\xc8\x7b\xe9\x6d\x0c\xf6\xce\x56\x6a\xe8\x07\xe2\xe5\x28\x07\xa8\x07\x05\x97\x6b\x5e\x0e\x2c\xc9\xd6\xf8\x1f\xff\xcd\x40\xee\x06\x88\x6b\x59\x96\xe0\x9d\x3b\xdd\x4d\xb2\x5a\xac\xa2\x05\x38\xb6\x77\xd8\x14\x29\xf6\xb2\x26\xc5\x38\xf4\x77\xc5\x2d\xe3\x4c\xb8\x23\x4b\xca\x71\xaa\x67\xca\x49\xf4\x0e\xa2\x80\x30\xef\x9c\x20\x66\x9c\xf9\xa5\x41\x69\x6f\x63\x10\x35\x89\xb9\x65\x7e\x7c\x2a\x1b\x00\xff\x04\x01\x9a\x91\x0d\x70\xb0\xde\xeb\x4a\x4e\x07\xda\x73\x62\x6e\x4a\x55\xb8\x40\xbd\x09\x33\x29\x6c\x60\xec\x81\x43\x82\x98\xc5\x9c\x11\x07\xfa\x21\x0c\xe8\x0b\x4f\x6c\xe0\x30\x3e\x41\x8f\x56\xfb\x03\x9d\x9b\xd6\xd7\x0e\x9a\x37\xd4\x54\x72\xea\x52\x55\x5a\x00\xa6\xfe\xe1\x99\x57\x7d\xa5\xf8\x37\x00\x00\xff\xff\xb5\xae\x1e\x33\xfc\x0e\x00\x00")

func notebookCssBytes() ([]byte, error) {
	return bindataRead(
		_notebookCss,
		"notebook.css",
	)
}

func notebookCss() (*asset, error) {
	bytes, err := notebookCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "notebook.css", size: 3836, mode: os.FileMode(436), modTime: time.Unix(1526236113, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _notebookHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcf\x6a\xf5\x20\x10\xc5\xf7\x79\x8a\xc1\x7d\x14\xbe\x8f\x6e\x8a\xc9\xa2\x85\xd2\x55\xbb\x68\x5f\xc0\xab\x73\x6f\x4c\xbd\x9a\x3a\x93\x4b\x43\xc8\xbb\x17\x0d\xf4\xff\x4a\x38\x33\xbf\x73\xce\xa8\x07\x34\xae\x6f\x00\x74\xf0\xf1\x05\x32\x86\x4e\x10\x2f\x01\x69\x40\x64\x01\x43\xc6\x63\x27\xd6\x15\xe4\x53\x55\x61\xdb\x44\xdf\x94\x7d\xb2\xd9\x4f\x0c\x94\x6d\x27\x06\xe6\x89\xae\x95\xb2\x2e\x8e\x24\x6d\x48\xb3\x3b\x06\x93\x51\xda\x74\x56\x66\x34\x6f\x2a\xf8\x03\xa9\x8c\xaf\xb3\xcf\x28\x47\x52\xff\xe4\x7f\x79\xf5\x21\x9c\x7d\x94\x23\x89\x5e\xab\xdd\xb5\x6f\xb4\xda\x8b\x35\xfa\x90\xdc\x52\x5e\xe7\x2f\x60\x83\x21\xea\x44\x4e\x89\x5b\x9b\x22\x63\x64\xd1\x37\xeb\x0a\xd9\xc4\x13\x82\x7c\xb8\x91\xb7\x18\x42\x69\xf9\x0d\xb0\x18\x02\x94\x23\xca\xf4\x79\x99\x10\xb6\xad\x2d\xa2\xa8\xa7\xff\xd8\x6c\x29\xcd\xd9\xa2\xe8\x0b\x71\xef\x4f\x43\xf0\xa7\x81\xd1\xc1\xb6\x69\xe5\xfc\xa5\x30\x9f\x99\x8f\x33\x4f\x33\xd7\xc8\x3f\xac\x52\x9d\xd6\x98\x02\xb5\x20\xef\x52\x3e\x1b\x2e\x76\xed\x8e\x7c\xb1\xc4\xe8\x6a\xf5\x5d\xfa\x25\x34\x5a\xed\xbf\xf1\x1e\x00\x00\xff\xff\x94\xc7\xc8\xcd\xb6\x01\x00\x00")

func notebookHtmlBytes() ([]byte, error) {
	return bindataRead(
		_notebookHtml,
		"notebook.html",
	)
}

func notebookHtml() (*asset, error) {
	bytes, err := notebookHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "notebook.html", size: 438, mode: os.FileMode(436), modTime: time.Unix(1526236113, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pageHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x41\x6f\xd4\x3c\x14\xbc\xe7\x57\xf8\xb3\x7a\xfb\xda\x38\xd0\x16\xb6\x95\x63\x84\x40\x2a\x12\x62\xbb\xd0\xc2\x56\xbd\x79\x93\x97\xc4\xad\x63\x07\x3f\x67\xbb\x51\xc8\x7f\x47\x76\x48\xe1\x06\xa7\x24\xef\x8d\x66\x26\xe3\x31\xff\xaf\xb4\x85\x1f\x3a\x20\x8d\x6f\xb5\x48\xf8\xf2\x00\x59\x8a\x84\x10\xee\x95\xd7\x20\xc6\x91\xa4\xb7\xe1\x8d\x4c\x13\xf9\x41\x3e\xc9\xbe\x04\xce\xe6\x5d\x40\x69\x65\x1e\x89\x03\x9d\x53\xf4\x83\x06\x6c\x00\x3c\x25\x8d\x83\x2a\xa7\x8d\xf7\x1d\x5e\x32\x56\x59\xe3\x31\xad\xad\xad\x35\xc8\x4e\x61\x5a\xd8\x96\x15\x88\x6f\x2a\xd9\x2a\x3d\xe4\x9b\xdb\xff\x6f\xa4\xc1\xcb\xb3\x2c\x3b\x3e\xcb\x32\xe5\xa5\x56\xc5\xf1\xeb\x2c\xa3\xff\x2c\xd1\x23\xa4\x41\x46\x3e\x01\xda\x16\xa2\x82\x03\x0d\x12\x01\xd9\xfe\x3c\xcd\xd2\x17\xa7\x41\x92\x49\xad\xd3\x02\x91\x12\x65\x3c\xd4\x4e\xf9\x21\xa7\xd8\xc8\xd3\xd5\xd9\xc9\xfb\xf5\xf5\x87\xfb\x57\xab\xaf\xab\xe6\xbe\xfa\x78\x77\xed\xfc\xc3\x76\xff\x70\xe8\xf1\xca\x5e\x6c\x3f\x1b\xb7\x3e\xbc\xc4\xef\x57\x99\xaf\xb0\x6e\xde\xee\xfd\x37\xfd\x65\x7b\xea\xf7\x8f\x77\xdb\xfb\xe6\x7c\xb5\xbe\x78\xe8\x28\x29\x9c\x45\xb4\x4e\xd5\xca\xe4\x54\x1a\x6b\x86\xd6\xf6\x48\x45\xf2\xb7\xdf\x08\x29\xdf\xc4\x29\x99\x26\x2a\x12\xce\xe6\x63\xe0\x3b\x5b\x0e\x31\x84\x5e\x93\x42\x4b\xc4\x9c\xee\x1c\xc8\xb2\x70\x7d\xbb\xc3\x98\x0f\x21\xe3\x48\x9c\x34\x35\x90\x23\x65\x4a\x38\x1c\x93\x23\xd0\xd0\x82\xf1\xe4\x32\x27\xe9\x46\x3a\x1f\x68\x23\x34\xfa\x10\xe3\xa8\xaa\x5f\xe0\x69\xe2\xd8\x49\xb3\x90\x47\xde\x13\x84\x8e\x0a\xc6\x59\xd8\x88\x71\x04\x53\x4e\x13\x97\xbf\xbd\x2e\xfc\xe9\x46\xfa\x26\x3a\xfe\x73\xb8\x96\x6d\x68\x0b\x67\x52\x70\xa6\xd5\xb3\x47\x30\xe5\x6c\x83\xb3\x5e\x8b\x24\xe1\xa5\xda\x2f\xba\x9d\xac\xe1\xa4\xb0\xc6\x83\xf1\x91\x2d\x7d\x37\x7f\x44\xa2\x52\xed\x03\xbe\xb2\xd6\x83\x8b\x71\x74\x62\x63\x9f\xc0\x41\x49\x76\x03\x79\xb6\xb6\xb4\xa1\x56\xbe\xe9\x77\xb1\x04\xbb\xbe\x68\xa4\x91\xc0\xda\xd0\x5c\x2a\xda\xb9\xc0\xc1\x5a\x17\x72\x5e\x38\x13\xce\xe6\xac\x39\x9b\x2f\xc2\xcf\x00\x00\x00\xff\xff\x92\x39\x04\x42\x20\x03\x00\x00")

func pageHtmlBytes() ([]byte, error) {
	return bindataRead(
		_pageHtml,
		"page.html",
	)
}

func pageHtml() (*asset, error) {
	bytes, err := pageHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "page.html", size: 800, mode: os.FileMode(436), modTime: time.Unix(1526056397, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _styleCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x54\x5b\x8e\xdb\x30\x0c\xfc\xf7\x29\x88\x0d\xfa\x57\x05\xde\x0d\xd2\x24\xca\x25\x0a\xb4\x17\x90\x25\xda\x21\x22\x4b\x82\x24\x77\x9d\x16\xb9\x7b\x61\x5b\x7e\x65\xb3\x58\xf8\x23\x10\x45\x72\x86\x9c\x51\x0a\xab\x6e\xf0\x2f\x03\x28\xad\x89\xac\x14\x35\xe9\x1b\x87\x97\x9f\xbf\xe1\x97\x30\xe1\xe5\x3b\x04\x61\x02\x0b\xe8\xa9\x3c\x67\xf7\x6c\xab\xc8\x6b\x0a\x91\xbd\x7b\xe1\x1c\xfa\xbe\xb4\x16\xbe\x22\xc3\x61\x9f\xbb\x16\x44\x13\xed\x39\x03\x78\x27\x15\x2f\x1c\x7e\xe4\xdf\x96\x75\x7d\x7e\xdf\x20\xc4\x9b\x46\x16\x6f\x0e\x39\x18\x6b\x70\x95\xa5\xa9\x4f\x2c\xac\x57\xe8\x99\x17\x8a\x9a\xc0\x61\xe7\xda\x87\x2c\x7e\xb1\x7f\x12\x89\x42\xc8\x6b\xe5\x6d\x63\x14\x93\x56\x5b\xcf\x61\x83\xc7\xee\x7b\x6c\x2c\xfa\xf4\x88\x6d\x64\x0a\xa5\xf5\x22\x92\x35\x23\x07\x80\xb1\x38\xcf\x4f\x27\x25\xbb\x88\xa2\xe0\xb4\xb8\x71\x28\xb4\x95\xd7\x2e\xe2\x84\x52\x64\x2a\x0e\x07\xd7\xc2\x5b\xfe\x81\x16\xd0\xb6\x1c\x60\xa6\xcc\x1c\xf6\x5d\x1a\x40\x4d\x86\xa5\xdd\x0c\x95\x33\x64\x71\xe8\xbe\xf3\xc8\x4e\x68\xaa\x0c\x07\x89\x26\xa2\xe7\xd9\x3d\xeb\xba\x32\x6c\x23\x7a\x23\x34\xd3\x64\xae\x4c\xe8\x38\xab\x17\xe8\x2f\x72\xd8\xee\xb1\xee\xf9\x14\x1e\x85\x92\xbe\xa9\x8b\x30\x2e\xf4\x93\xcd\xaf\xeb\x4f\x5d\xfd\x62\x6c\x32\x9a\x92\x3e\xcb\x96\xdb\xfe\x97\x05\x74\x4f\x27\xbd\x67\xd9\xb6\xcb\xae\xb1\xbf\x5e\x1b\xa2\x3b\x8f\xae\x39\x2c\x5d\x33\x69\x1e\xad\xe3\xf0\xea\x5a\x08\x56\x93\x82\x0d\x22\x0e\xf7\x13\xce\x6e\xdc\xbb\x13\x15\x32\x69\x4d\x44\x13\xbf\xc0\xca\x17\x40\x1f\x1a\x65\xa5\xb5\x31\xb9\x69\x16\x45\x29\xf5\x5c\x91\xd4\xc5\x06\x1a\x0c\x54\x52\x8b\x6a\x9c\x21\x46\x5b\x73\xc8\x87\xa3\xa7\xea\x12\xa7\x53\xc2\x65\x29\xba\x4b\x26\x58\x6b\x70\x1c\x34\x1c\x29\x89\x07\x52\xc7\x83\x28\xa4\xec\x33\xa2\x7a\x5c\xff\x21\x8d\xb3\x09\x28\xbc\xbc\xa4\xd2\xa7\x44\xd7\xcc\xfa\x9d\xe7\xeb\x8d\xbd\x4d\xf4\x26\xd3\x4e\x91\x67\xcf\x73\x8e\xaf\xe4\x4b\x5b\xec\x1c\x68\x90\x5d\x70\xc0\x7d\x1d\xe6\x5c\xa9\xb1\xb0\xcf\xf2\xd1\xf2\xd2\xca\x26\x7c\xf5\xd2\x67\xec\xd1\xd8\xb6\x89\x1d\xe4\xfc\x1f\xf3\x3f\x00\x00\xff\xff\x73\xac\x4f\xae\xf1\x04\x00\x00")

func styleCssBytes() ([]byte, error) {
	return bindataRead(
		_styleCss,
		"style.css",
	)
}

func styleCss() (*asset, error) {
	bytes, err := styleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "style.css", size: 1265, mode: os.FileMode(436), modTime: time.Unix(1526747240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tableHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x41\x6f\xd4\x3c\x14\xbc\xe7\x57\xf8\xb3\x7a\xfb\xda\x38\xd0\x16\xb6\x95\x63\x84\x40\x2a\x12\x62\xbb\xd0\xc2\x56\xbd\x79\x93\x97\xc4\xad\x63\x07\x3f\x67\xbb\x51\xc8\x7f\x47\x76\x48\xe1\x06\xa7\x24\xef\x8d\x66\x26\xe3\x31\xff\xaf\xb4\x85\x1f\x3a\x20\x8d\x6f\xb5\x48\xf8\xf2\x00\x59\x8a\x84\x10\xee\x95\xd7\x20\xc6\x91\xa4\xb7\xe1\x8d\x4c\x13\xf9\x41\x3e\xc9\xbe\x04\xce\xe6\x5d\x40\x69\x65\x1e\x89\x03\x9d\x53\xf4\x83\x06\x6c\x00\x3c\x25\x8d\x83\x2a\xa7\x8d\xf7\x1d\x5e\x32\x56\x59\xe3\x31\xad\xad\xad\x35\xc8\x4e\x61\x5a\xd8\x96\x15\x88\x6f\x2a\xd9\x2a\x3d\xe4\x9b\xdb\xff\x6f\xa4\xc1\xcb\xb3\x2c\x3b\x3e\xcb\x32\xe5\xa5\x56\xc5\xf1\xeb\x2c\xa3\xff\x2c\xd1\x23\xa4\x41\x46\x3e\x01\xda\x16\xa2\x82\x03\x0d\x12\x01\xd9\xfe\x3c\xcd\xd2\x17\xa7\x41\x92\x49\xad\xd3\x02\x91\x12\x65\x3c\xd4\x4e\xf9\x21\xa7\xd8\xc8\xd3\xd5\xd9\xc9\xfb\xf5\xf5\x87\xfb\x57\xab\xaf\xab\xe6\xbe\xfa\x78\x77\xed\xfc\xc3\x76\xff\x70\xe8\xf1\xca\x5e\x6c\x3f\x1b\xb7\x3e\xbc\xc4\xef\x57\x99\xaf\xb0\x6e\xde\xee\xfd\x37\xfd\x65\x7b\xea\xf7\x8f\x77\xdb\xfb\xe6\x7c\xb5\xbe\x78\xe8\x28\x29\x9c\x45\xb4\x4e\xd5\xca\xe4\x54\x1a\x6b\x86\xd6\xf6\x48\x45\xf2\xb7\xdf\x08\x29\xdf\xc4\x29\x99\x26\x2a\x12\xce\xe6\x63\xe0\x3b\x5b\x0e\x31\x84\x5e\x93\x42\x4b\xc4\x9c\xee\x1c\xc8\xb2\x70\x7d\xbb\xc3\x98\x0f\x21\xe3\x48\x9c\x34\x35\x90\x23\x65\x4a\x38\x1c\x93\x23\xd0\xd0\x82\xf1\xe4\x32\x27\xe9\x46\x3a\x1f\x68\x23\x34\xfa\x10\xe3\xa8\xaa\x5f\xe0\x69\xe2\xd8\x49\xb3\x90\x47\xde\x13\x84\x8e\x0a\xc6\x59\xd8\x88\x71\x04\x53\x4e\x13\x97\xbf\xbd\x2e\xfc\xe9\x46\xfa\x26\x3a\xfe\x73\xb8\x96\x6d\x68\x0b\x67\x52\x70\xa6\xd5\xb3\x47\x30\xe5\x6c\x83\xb3\x5e\x8b\x24\xe1\xa5\xda\x2f\xba\x9d\xac\xe1\xa4\xb0\xc6\x83\xf1\x91\x2d\x7d\x37\x7f\x44\xa2\x52\xed\x03\xbe\xb2\xd6\x83\x8b\x71\x74\x62\x63\x9f\xc0\x41\x49\x76\x03\x79\xb6\xb6\xb4\xa1\x56\xbe\xe9\x77\xb1\x04\xbb\xbe\x68\xa4\x91\xc0\xda\xd0\x5c\x2a\xda\xb9\xc0\xc1\x5a\x17\x72\x5e\x38\x13\xce\xe6\xac\x39\x9b\x2f\xc2\xcf\x00\x00\x00\xff\xff\x92\x39\x04\x42\x20\x03\x00\x00")

func tableHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tableHtml,
		"table.html",
	)
}

func tableHtml() (*asset, error) {
	bytes, err := tableHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "table.html", size: 800, mode: os.FileMode(436), modTime: time.Unix(1526695644, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".dirlist.html.swp": DirlistHtmlSwp,
	"dirlist.html": dirlistHtml,
	"notebook.css": notebookCss,
	"notebook.html": notebookHtml,
	"page.html": pageHtml,
	"style.css": styleCss,
	"table.html": tableHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	".dirlist.html.swp": &bintree{DirlistHtmlSwp, map[string]*bintree{}},
	"dirlist.html": &bintree{dirlistHtml, map[string]*bintree{}},
	"notebook.css": &bintree{notebookCss, map[string]*bintree{}},
	"notebook.html": &bintree{notebookHtml, map[string]*bintree{}},
	"page.html": &bintree{pageHtml, map[string]*bintree{}},
	"style.css": &bintree{styleCss, map[string]*bintree{}},
	"table.html": &bintree{tableHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

